2002-09-12  Aleksey Cheusov <vle@gmx.net>

  * configure.in, daemon.c, data.c, dictd.c, dictd.h, dictfmt_plugin, dictzip.c, index.c, plugin.h, utf8_ucs4.c, utf8_ucs4.h:
  fixed: crash while debugging output (80 chars limit)
  fixed: a lot of memory leaks. All they not critical because
         they happened during server initialisation only but
         I prefer to free memory explicitly.
  added: --no-mmap argument to 'dictd'
  ADDED: plug-in capability for DICTD.
         Using it you can develop alternative database formats,
         linguistic modules such as stemming/translator, "redirectors"
         to another dictd or on-line dictionaries such as Britannica, or
         even front-end to your favourite intra-net searchers such as
         mnogosearch and ht://Dig. Almost everything you want.

         See plugin.h and dictfmt_plugin for details

2002-09-11  Aleksey Cheusov <vle@gmx.net>

  * ChangeLog:
  ChangeLog is up-to date

2002-08-23  Aleksey Cheusov <vle@gmx.net>

  * dictfmt.c:
  added: --without-hw parameter to 'dictfmt'

  * dictfmt.c:
  added: --headword-separator parameters to 'dictfmt'.
    allows several headwords to have the same definition.
    Example: autumn%%%fall if dictfmt is run with --headword-separator %%%

  * dictd.c, dictfmt.c:
  added: locale verification both in 'dictfmt' and 'dictd'

2002-08-22  Aleksey Cheusov <vle@gmx.net>

  * dictfmt.c:
  'dictfmt' now removes ending spaces for the head words

  * zlib/zlib.html, zlib/zlib.rc, zlib/zutil.c, zlib/zutil.h, zlib/zlib.3, zlib/zlib.def, zlib/zlib.h, zlib/inftrees.h, zlib/infutil.c, zlib/infutil.h, zlib/maketree.c, zlib/minigzip.c, zlib/trees.c, zlib/uncompr.c, zlib/zconf.h, zlib/FAQ, zlib/Makefile, zlib/Makefile.b32, zlib/Makefile.bor, zlib/Makefile.dj2, zlib/Makefile.in, zlib/Makefile.msc, zlib/Makefile.sas, zlib/Makefile.tc, zlib/Makefile.wat, zlib/README, zlib/README.DICT, zlib/adler32.c, zlib/algorithm.doc, zlib/compress.c, zlib/crc32.c, zlib/deflate.c, zlib/deflate.h, zlib/example.c, zlib/gzio.c, zlib/infblock.c, zlib/infblock.h, zlib/infcodes.c, zlib/infcodes.h, zlib/inffast.c, zlib/inffast.h, zlib/inflate.c, zlib/inftrees.c, zlib/ChangeLog:
  downgrade to zlib-1.1.3 + double-free() patch

2002-08-21  Aleksey Cheusov <vle@gmx.net>

  * dict.c:
  fixed: possible crash of 'dict' client

  * dictfmt.c:
  unnecessary /*LEAVE FIRST CHARACTER IN UPPER CASE BUT DOWNCASE THE REST*/
    has been removed from dictfmt.c

  * configure.in:
  I removed local_zlib=1 line in configure.in
    With this line
    both --with[out]-local-zlib arguments supplied to 'configure' will
    be ignored and local BUGGY zlib library will always be used.
    Now external zlib library will be used by default.

2002-08-13  Aleksey Cheusov <vle@gmx.net>

  * ChangeLog, Makefile.in:
  changed: ChangeLog

  * Makefile.in:
  added: dictfmt_index2suffix in 'install' and 'uninstall' Makefile's targets

2002-08-12  Aleksey Cheusov <vle@gmx.net>

  * dictfmt_index2suffix, utf8_ucs4.c, Makefile.in, dict.c, dictd.8, dictfmt.1, dictfmt.c:
  added: dictfmt.1, dictfmt_index2suffix, patched version of dictfmt.c
  several changes in dictd.8
  fixed: typo in utf8_ucs4.c
  added: uninstall target in Makefile.in

  Now dictfmt is a part of dictd distribution

2002-08-05  Aleksey Cheusov <vle@gmx.net>

  * ChangeLog: *** empty log message ***

  * Makefile.in:
  distclean - removes everything absent in tar.gz
  cvsclean  - removes everything absent in CVS repository

  * index.c:
  changed: substring search for UTF-8 dictionaries uses BMH but the RE.

  * libmaa/list.c, dictd.c, dictd.h, index.c:
  added: possibility to search using all characters
    but the alphanumeric and space only.
    00-database-allchars special entry in the index file is used.

  * dictd.h, index.c:
  changed: utf-8 search becomes faster

  * index.c:
  changed: UTF-8 "suffix" search uses BMH but the RE.

  * dictd.c, dictd.h, index.c, servparse.y, servscan.l, utf8_ucs4.c, utf8_ucs4.h:
  added: more efficient (probably) suffix search algorithm is implemented.
   Uses additional index file consisting of anagrams.

  * index.c:
  fixed: bug causing a lot of unnecessary comparisons

  * Makefile.in:
  changed: distclean target in Makefile.in

  * index.c:
  fixed: bug in debugging output

  * libmaa/Makefile.in, libmaa/log.c, libmaa/maa.h, Makefile.in, daemon.c, data.c, dictd.c, dictd.h, index.c, utf8_ucs4.c, utf8_ucs4.h:
  added: utf-8 functions in utf8_ucs4.c
  changed: 'distclean' target of Makefile.in
  added: argument '--test-strategy'
    it can be used for debugging.
  fixed: crash at fclose(NULL)
  fixed: crash of dictd with --ftest
  fixed: "8bit" bug in compare:index.c
  changed: comparions count in the debugging mode is calculated
    without optStart array initialization
  fixed: "8bit" bug in suffix/substring searching strategy
  changed: PRINTF and FPRINTF macroses.
    old variants cause problems with the nested if/else
  added: UTF-8 support

2002-08-02  Rik Faith  <faith@dict.org>

  * libmaa/Makefile.in, libmaa/arg.c, libmaa/argtest.c, libmaa/base26.c, libmaa/base64.c, libmaa/basetest.c, libmaa/bit.c, libmaa/bittest.c, libmaa/configure.in, libmaa/debug.c, libmaa/debugtest.c, libmaa/decl.h, libmaa/error.c, libmaa/flags.c, libmaa/hash.c, libmaa/hashtest.c, libmaa/list.c, libmaa/listtest.c, libmaa/log.c, libmaa/maa.c, libmaa/maa.h, libmaa/maaP.h, libmaa/memory.c, libmaa/memtest.c, libmaa/mkrnd.c, libmaa/parse-concrete.c, libmaa/parse.c, libmaa/pr.c, libmaa/prime.c, libmaa/primetest.c, libmaa/prtest.c, libmaa/rnd.c, libmaa/set.c, libmaa/settest.c, libmaa/sl.c, libmaa/sltest.c, libmaa/source.c, libmaa/stack.c, libmaa/strdup.c, libmaa/string.c, libmaa/stringtest.c, libmaa/text.c, libmaa/timer.c, libmaa/xmalloc.c, servscan.l, zlib/ChangeLog, zlib/adler32.c, zlib/compress.c, zlib/crc32.c, zlib/deflate.c, zlib/deflate.h, zlib/example.c, zlib/gzio.c, zlib/minigzip.c, zlib/trees.c, zlib/uncompr.c, zlib/zconf.h, zlib/zutil.c, zlib/zutil.h, ChangeLog, Makefile.in, clientparse.y, configure.in, daemon.c, data.c, dict.c, dictd.c, dictzip.c, index.c, net.c:
  Update with 1.7.1 release

2002-05-03  Rik Faith  <faith@dict.org>

  * regex/COPYRIGHT, regex/Makefile, regex/README, regex/README.DICT, regex/WHATSNEW, regex/engine.c, regex/regcomp.c, regex/regerror.c, regex/regex.3, regex/regex.7, regex/regex2.h, regex/regexec.c, regex/tests, regex/utils.h, zlib/ChangeLog, zlib/FAQ, zlib/INDEX, zlib/Make_vms.com, zlib/Makefile, zlib/Makefile.in, zlib/Makefile.riscos, zlib/README, zlib/README.DICT, zlib/adler32.c, zlib/algorithm.txt, zlib/compress.c, zlib/configure, zlib/crc32.c, zlib/deflate.c, zlib/deflate.h, zlib/example.c, zlib/gzio.c, zlib/infblock.c, zlib/infblock.h, zlib/infcodes.c, zlib/infcodes.h, zlib/inffast.c, zlib/inffast.h, zlib/inffixed.h, zlib/inflate.c, zlib/inftrees.c, zlib/inftrees.h, zlib/infutil.c, zlib/infutil.h, zlib/maketree.c, zlib/minigzip.c, zlib/trees.c, zlib/trees.h, zlib/uncompr.c, zlib/zconf.h, zlib/zlib.3, zlib/zlib.h, zlib/zlib.html, zlib/zutil.c, zlib/zutil.h, libmaa/debugtest.c, libmaa/decl.h, libmaa/error.c, libmaa/flags.c, libmaa/hash.c, libmaa/hashtest.c, libmaa/list.c, libmaa/listtest.c, libmaa/log.c, libmaa/maa.c, libmaa/maa.h, libmaa/maaP.h, libmaa/memory.c, libmaa/memtest.c, libmaa/mkrnd.c, libmaa/parse-concrete.c, libmaa/parse.c, libmaa/pr.c, libmaa/prime.c, libmaa/primetest.c, libmaa/prtest.c, libmaa/rnd.c, libmaa/set.c, libmaa/settest.c, libmaa/sl.c, libmaa/sltest.c, libmaa/source.c, libmaa/stack.c, libmaa/strdup.c, libmaa/string.c, libmaa/stringtest.c, libmaa/text.c, libmaa/timer.c, libmaa/version.c, libmaa/xmalloc.c, INSTALL, Makefile.in, clientparse.y, config.h.in, configure.in, daemon.c, data.c, dict.1, dict.c, dictd.8, dictd.c, dictd.h, dictzip.c, index.c, libmaa/Makefile.in, libmaa/acconfig.h, libmaa/arg.c, libmaa/argtest.c, libmaa/base26.c, libmaa/base64.c, libmaa/basetest.c, libmaa/bit.c, libmaa/bittest.c, libmaa/config.h.in, libmaa/configure.in, libmaa/debug.c, net.c, servscan.l, ChangeLog:
  Sync sourceforge.net repository with dictd-1.7.0 release

2001-01-12  Rik Faith  <faith@dict.org>

  * Makefile.in: Bump version

2001-01-01  Bob Hilliard  <hilliard@debian.org>

  * dict.c:
  Aaaargh!  Previous update broke pager in dict.  This is fixed now.

2000-12-31  Rik Faith  <faith@dict.org>

  * Makefile.in, index.c:
  Fix const warning
  Bump version number

  * libmaa/decl.h, libmaa/text.c, decl.h, index.c:
  Made minor changes for Solaris 5.7 compilation

2000-12-27  Bob Hilliard  <hilliard@debian.org>

  * dict.1, dict.c, dictd.8:
       dict.c - added argument to help message for -s; made all help messages go
  to stdout and error messages to stderr; disabled --html option
       dict.1 - clarified explanation of -s option (not really
  necessary, IMHO, but a bug was filed), mentioned that --html option is
  disabled.
       dictd.8 - corrected typo

2000-12-22  Rik Faith  <faith@dict.org>

  * Makefile.in, codes.h, daemon.c, data.c, decl.h, dict.c, dict.h, dictP.h, dictzip.c, dictzip.h, index.c, net.c, net.h:
  Fix Debian bug #77685 (dict crashes with "-s regexp sch*".
  Update email addresses.
  Bump version number.

  * daemon.c, dict.c:
  Fix memory leak and remove limitation on matches.

2000-11-09  Rik Faith  <faith@dict.org>

  * dict.c: Limit number of matches to print
  Because of the use of a string pool by the argification functions,
  printing too many matches can use far too much memory -- better to
  fail until we move to another string management algorithm

  * dict.c: Limit number of definitions returned to 100

2000-11-08  Rik Faith  <faith@dict.org>

  * Makefile.in, dictd.c, dictd.h, servscan.l:
  Apply patches from Bob Hilliard that are in the Debian version.
  The grp.h file may not be portable and should be tested.
  Bump version number to avoid confusion.

2000-05-29  Rik Faith  <faith@dict.org>

  * daemon.c: Fix MATCH

  * Makefile.in: Bump version

2000-01-27  Rik Faith  <faith@dict.org>

  * Makefile.in:
  Man page directory fix from weed@DeepThought

1999-12-23  Julian Squires  <tek@wiw.org>

  * libmaa/maaP.h:
  Added OpenBSD to list of BSDs to allow smooth compilation.

1999-12-23  Rik Faith  <faith@dict.org>

  * libmaa/bit.c, libmaa/hash.c, libmaa/hashtest.c, libmaa/listtest.c, libmaa/settest.c:
  Update for 64-bit machines

1999-12-22  Rik Faith  <faith@dict.org>

  * libmaa/decl.h: Update for Linux/Sparc

  * Makefile.in: -N no longer needed for cvs export

  * configure.in: Fix typo

  * Makefile.in, configure.in:
  Final fixes for 1.5.0 release.

  * INSTALL, Makefile.in:
  Update INSTALL for Cygwin
  Update dist target for new CVS repository

  * Makefile.in, configure.in, dict.c, dictP.h:
  Imcomplete changes for IRIX and other systems where --with-cc is needed

  * Makefile.in, configure.in, daemon.c, dictd.c, dictd.h, libmaa/log.c:
  Changes for OSF (DEC Unix) for Alpha

  * Makefile.in: Use mandir (from Tage Stabell-Kulo)
  Create man8 if it does not exist

  * net.c: Changes from Jeff Blaine and Stephen L Moshier

  * libmaa/log.c:
  Changes from Stephen L Moshier to support Cygnus B20 under Windows 98

  * INITSCRIPT, INSTALL, README:
  Added credit to Jeff Blaine

  * INITSCRIPT, INSTALL, README:
  New documentation from Jeff Blaine

  * Makefile.in, clientscan.l, configure.in, decl.h, dict.1, dict.c, dictd.c, libmaa/hash.c, servscan.l:
  Patches from Bob and Kirk Hilliard:
  Fix error in code that causes logging to fail
  Fix stdout initialization in dict
  Fix defs for linux on sparc
  Fix hash type (for alpha?)
  Fix parse error message misalignment
  Fix some annoying compilation warnings
  Fix syntax in dictd configuration file
  Add include keyword to dictd configuration file syntax
  Add switch to specify pager (or lack thereof)
  Add documentation for pager option
  Drop root as soon as daemon starts

  Also, fix --prefix on configuration

1998-07-06  Rik Faith  <faith@dict.org>

  * dictzip.1, index.c, data.c, dict.1, dictd.8, dictd.c:
  Removed Linux from man pages
  Added more UNZIP debugging code

1998-07-05  Rik Faith  <faith@dict.org>

  * libmaa/configure.in:
  Fixed Makefile.in and configure.in syntax per email from Ian T Zimmerman

  * libmaa/timer.c, libmaa/configure.in, libmaa/Makefile.in, doc/dicf.ms, doc/Makefile.in, Makefile.in, configure.in:
  Fixed timer wrap-around between 49 and 50 days
  Fixed Makefile.in and configure.in syntax per email from Ian T Zimmerman

1998-03-01  Rik Faith  <faith@dict.org>

  * dictzip.c, Makefile.in, daemon.c:
  Fixed typo in daemon.c
  Removed unused variables from dictzip

  * daemon.c, dictzip.c, Makefile.in:
  Fixed . problem
  Fixed dictzip to conform to man page

1998-02-28  Rik Faith  <faith@dict.org>

  * dictd.c, Makefile.in:
  Update for Linux accept(2)

1998-02-22  Rik Faith  <faith@dict.org>

  * ANNOUNCE: Update ANNOUNCE

  * dictd.conf:
  Another (more complete) example dictd.conf file

  * README, configure.in:
  Minor changes
  Always use local libmaa, because of recent bug fixes

  * libmaa/log.c, libmaa/maa.h:
  Minimize warnings with Linux glibc

  * libmaa/source.c:
  Fixed NULL pointer dereference in err_ routines

  * Makefile.in, libmaa/maaP.h:
  Port to BSDI

1998-02-20  Rik Faith  <faith@dict.org>

  * index.c, daemon.c, Makefile.in:
  Fixed problem with duplicates

1998-02-16  Rik Faith  <faith@dict.org>

  * dictd.c, daemon.c, Makefile.in:
  Fixed startup bug and rate computation

  * dictd.c, dict.c:
  Fix race condition when counting children

  * index.c, dictd.h, dictd.c, dictd.8, dict.h, dict.c, dict.1, TODO, Makefile.in, README, ANNOUNCE:
  Added more features

1998-01-19  Rik Faith  <faith@dict.org>

  * daemon.c: Updated buffer overflow behavior

  * dictd.c: Removed code for PERSISTENT servers

  * net.c, dictd.h, dictd.c, dict.h, dict.c, daemon.c, clientscan.l, clientparse.y, Makefile.in:
  Added paging feature

1998-01-16  Rik Faith  <faith@dict.org>

  * decl.h, net.c, libmaa/log.c, libmaa/maaP.h, libmaa/decl.h:
  Changes for HPUX

  * dictd.c: Change for Solaris

  * decl.h, dictd.c, configure.in:
  Changes for Solaris (and some DG/UX)

1998-01-05  Rik Faith  <faith@dict.org>

  * libmaa/maaP.h, libmaa/log.c:
  Port to DG/UX

  * dict.c, Makefile.in:
  Make client deal with partially implemented servers.

  * libmaa/maaP.h: Port to FreeBSD

1998-01-04  Rik Faith  <faith@dict.org>

  * ANNOUNCE: Add draft of announcement

  * Makefile.in: Use RFC2229 instead of building from .ms

  * doc/rfc2229.txt: Add official RFC2229

  * doc/Makefile.in, net.c, dictd.c, dict.c, README, dict.1, Makefile.in:
  Minor updates
  Try all IPs for round-robin DNS entries

1997-11-30  Rik Faith  <faith@dict.org>

  * libmaa/sl.c: Update for dissertation benchmarks

1997-11-08  Rik Faith  <faith@dict.org>

  * libmaa/list.c, libmaa/maa.h:
  This version is buggy, do not check out

1997-09-25  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/log.c, libmaa/decl.h:
  Updates for DSL Example under Solaris

1997-09-19  Rik Faith  <faith@dict.org>

  * libmaa/maaP.h: Fix Solaris predefined macros

1997-09-14  Rik Faith  <faith@dict.org>

  * libmaa/set.c, libmaa/maa.h:
  Reimplemented algorithm based on write-up in
  dissertation.  Now using the same algorithm in both places.

1997-09-12  Rik Faith  <faith@dict.org>

  * libmaa/decl.h, libmaa/configure.in:
  Preparing DSL example snapshot

1997-09-01  Rik Faith  <faith@dict.org>

  * dictzip.c, dictzip.1, dictd.8, dict.c, dict.1, TODO, Makefile.in:
  Improved man pages

  * doc/rfc.ms, doc/Makefile.in, example3.conf, dictd.c, dict.c, daemon.c, configure.in:
  Work based on IETF comments

1997-08-26  Rik Faith  <faith@dict.org>

  * doc/toc.ms, doc/rfc.ms, doc/Makefile.in:
  Working on draft -02 for IETF

1997-08-21  Rik Faith  <faith@dict.org>

  * libmaa/maa.h:
  Got breakpoint tracking and navigation working

1997-08-15  Rik Faith  <faith@dict.org>

  * libmaa/arg.c: More work on tracking

1997-07-27  Rik Faith  <faith@dict.org>

  * doc/rfc.ms: Describe form of extensions

1997-07-18  Rik Faith  <faith@dict.org>

  * doc/security.doc, doc/rfc.ms:
  Minor RFC changes
  Addition of security-related comments

1997-07-12  Rik Faith  <faith@dict.org>

  * dict.c: Fixed -I

  * dictd.h: Fix config file name

  * dictd.8, README, Makefile.in:
  Added README.  Fixed install

  * TODO, Makefile.in:
  Installation fixes

  * doc/rfc.ms, servparse.y, servscan.l, net.h, net.c, example.dictrc, example3.conf, dictzip.1, dictd.h, dictd.c, dictd.8, dict.html, dict.h, dict.c, dict.1, configure.in, config.h.in, clientscan.l, clientparse.y, Makefile.in:
  Added config files to client
  Added dict: parsing to client
  Options for nospelling and pipeline size
  General cleanup
  Install and dist targets

1997-07-11  Rik Faith  <faith@dict.org>

  * libmaa/error.c: Allow routine name to be NULL

  * Makefile.in: Fixed dist target

  * doc/webster.out, doc/design.tex, net.c, dictzip.c, dictd.h, dictd.c, dict.c, dict.1, Makefile.in:
  Added client options for pipesize and html
  Unified versioning
  Added dist target
  Cleaned up Makefiles
  More client bug fixes

1997-07-09  Rik Faith  <faith@dict.org>

  * net.c, dictzip.c, dictd.c, dict.h, dict.c, dict.1, daemon.c:
  More work on client

1997-07-08  Rik Faith  <faith@dict.org>

  * doc/rfc.ms, net.c, dictd.8, dict.h, dict.c, dict.1, daemon.c:
  Work on client

1997-07-07  Rik Faith  <faith@dict.org>

  * doc/rfc.ms, example3.conf, dictd.c:
  Fixed proctitles on SunOS

  * libmaa/timer.c:
  Use millisecond resolution for timer, instead of microseconds

1997-06-28  Rik Faith  <faith@dict.org>

  * dictzip.1: dictzip documentation

  * doc/rfc.ms: Final revisions

1997-06-23  Rik Faith  <faith@dict.org>

  * index.c, config:
  Fixed BMH string matching (again)

  * index.c, dictzip.h, example.conf, dictzip.c, dictd.h, dictd.c, dictd.8, daemon.c, configure.in, Makefile.in:
  Optimized string searches, wrote man pages

  * libmaa/timer.c:
  Made timers return parent and children times

1997-06-21  Rik Faith  <faith@dict.org>

  * index.c, dictd.h, dictd.c, dictd.8, daemon.c:
  Work on logging and documentation

  * libmaa/maa.h, libmaa/log.c, libmaa/flags.c, libmaa/debug.c:
  Made timestamps on logs optional
  Fixed typos

1997-06-11  Rik Faith  <faith@dict.org>

  * doc/rfc.ms, index.c, example.conf, dictd.h, dictd.c, dictd.8:
  More work on RFC

1997-06-03  Rik Faith  <faith@dict.org>

  * dictd.c: Zero memory before use

1997-06-02  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/parse.c, libmaa/configure.in:
  Only make weak symbols when compiling a shared library.
  Otherwise, everything fails when the library is not shared.
  Bumped version number

  * dictd.c, daemon.c: Minor fixes

  * doc/rfc.ms, doc/Makefile.in, dict.html:
  More work on document

1997-05-27  Rik Faith  <faith@dict.org>

  * doc/rfc.ms, doc/Makefile.in, servparse.y, servscan.l, index.c, example.site, dictd.h, example.conf, dictd.c, dict.c, daemon.c, configure.in, codes.h:
  Made daemon conform to 26May RFC draft

  * doc/Makefile.in: Makefile for doc directory

  * doc/rfc.ms, doc/design.tex:
  Careful edit
  Fixed -ms style formatting things.  Numbering now automatic.
  Adjusted grammar and made references to it in appropriate places.
  Added requirements section.
  Added pipelining section.
  Added comments about virtual databases.

1997-05-26  Rik Faith  <faith@dict.org>

  * doc/rfc.sh: Formfee dconverter

1997-05-22  Rik Faith  <faith@dict.org>

  * servscan.l, servparse.y, dictd.h, example2.conf, dictd.c, daemon.c:
  Persistent daemon clean up

1997-05-21  Rik Faith  <faith@dict.org>

  * libmaa/Makefile.in: Fixed ChangeLog target

  * libmaa/doc/libmaa.tex, libmaa/doc/libmaa.600dpi.ps, libmaa/doc/Makefile.in, libmaa/configure.in, libmaa/source.c, libmaa/config.h.in, libmaa/Makefile.in:
  Fixed a few problems with the docs -- others remain

  * libmaa/parse.c, libmaa/configure.in, libmaa/Makefile.in:
  Add support for shared libs under Linux
  Add installation target in Makefile

  * libmaa/version.c: Bump version

1997-05-20  Rik Faith  <faith@dict.org>

  * libmaa/string.c, libmaa/maa.h, libmaa/hash.c:
  Added hash function caching
  Added str_copy* support for strings which are known to be unque
  (e.g., source lines).
  Both of these changes should speed up scanning and parsing.

1997-05-10  Rik Faith  <faith@dict.org>

  * libmaa/source.c:
  Fixed core dump when sourceType is not available

1997-05-09  Rik Faith  <faith@dict.org>

  * doc/rfc.ms: More work on RFC

1997-05-07  Rik Faith  <faith@dict.org>

  * doc/rfc.ms: Remove mention of URL

1997-05-02  Rik Faith  <faith@dict.org>

  * dictd.h, dictd.c, dict.c, daemon.c, config.h.in, configure.in, codes.h, Makefile.conf:
  Initial experiment with persistent daemons

1997-05-01  Rik Faith  <faith@dict.org>

  * libmaa/argtest.out, libmaa/argtest.c, libmaa/arg.c:
  Fix arg_argify, again

1997-04-30  Rik Faith  <faith@dict.org>

  * doc/rfc.ms: More changes from Bret

  * net.c, net.h, dictd.h, dictd.c, dict.h, dict.c, daemon.c, codes.h, Makefile.in:
  Start on client
  Fix up socket I/O

1997-04-26  Rik Faith  <faith@dict.org>

  * doc/rfc.ms: Minor revisions

1997-04-22  Rik Faith  <faith@dict.org>

  * doc/rfc.ms: Bret's initial additions and changes

1997-04-21  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/set.c, libmaa/maa.h, libmaa/list.c, libmaa/Makefile.in:
  Keep version numbers from automatically bouncing.
  Make remaining iterators return non-zero if the iteration ended early.

1997-04-03  Rik Faith  <faith@dict.org>

  * servscan.l, servparse.y, net.c, md5.h, md5.c, index.c, example.conf, dictd.h, dictd.c, daemon.c, Makefile.in:
  Finished initial implementation of new protocol

  * doc/rfc.ms: More changes

1997-03-31  Rik Faith  <faith@dict.org>

  * doc/rfc.ms, net.h, net.c, dictd.h, dictd.c, dict.c, daemon.c, Makefile.in:
  Moving toward new protocol

1997-03-26  Rik Faith  <faith@dict.org>

  * dictzip.h, dictd.h, dictd.c, daemon.c:
  Moving toward new protocol

  * doc/rfc.ms: RFC-like document

1997-03-23  Rik Faith  <faith@dict.org>

  * net.c, example.conf, dictd.c, dictzip.c, data.c, daemon.c:
  Tweaking

1997-03-19  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/source.c, libmaa/argtest.out, libmaa/maa.h, libmaa/pr.c, libmaa/arg.c, libmaa/argtest.c:
  Allow arg_argify to quote in different ways.

1997-03-18  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/source.c:
  Increased buffer size for error reporting

  * libmaa/version.c, libmaa/parse.c, libmaa/maa.h:
  Added new parser entry point

1997-03-15  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/sl.c:
  Finished implementing Algorithms 1-6
  Wrote up algorithm descriptions
  Benchmarked algorithms with qsort:
  % Algorithm 0:
  %     0 nodes have been labelled (   0 relabelled,    0 needs comp.)
  %     18.500u 0.200s 22.217 84%
  %
  % Algorithm 1:
  %     5425575 nodes have been labelled (   0 relabelled,    0 needs comp.)
  %     1:55.31u 0.210s 1:58.44 97%
  %
  % Algorithm 2:
  %     22067 nodes have been labelled (5403508 relabelled,    0 needs comp.)
  %     17.640u 0.250s 20.219 88%
  %
  % Algorithm 3:
  %     5425575 nodes have been labelled (   0 relabelled, 5425575 needs comp.)
  %     2:06.19u 0.210s 2:08.83 98%
  %
  % Algorithm 4:
  %     22067 nodes have been labelled (5403508 relabelled, 5425575 needs comp.)
  %     25.470u 0.320s 28.606 90%
  %
  % Algorithm 5:
  %     22067 nodes have been labelled (5403508 relabelled, 662227 needs comp.)
  %     21.250u 0.270s 23.765 90%
  %
  % Algorithm 6:
  %     22067 nodes have been labelled (349455 relabelled, 662227 needs comp.)
  %     11.910u 0.180s 14.250 84%

1997-03-13  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  Added -a option to select fast labeling algorithms
  Implemented Algorithm 0, 1, 2, noting speed improvement
  I plan to break Algorithm 3 into 3 and 4 (and 5?), since it is a big
  step up from Algorithm 2, and may not be any faster...

  * index.c, net.c, dictd.c:
  Added RESUSE for sockets
  Fixed up daemon code
  Fiddled with search algorithms a bit

1997-03-12  Rik Faith  <faith@dict.org>

  * index.c, net.c, dictd.c, decl.h, daemon.c, Makefile.in:
  Made status report elapsed times for previous command
  Fixed up regular expression matching

  * regex/regcomp.c:
  Added minimal support for automatic compilation under SunOS 4

  * libmaa/version.c, libmaa/timer.c, libmaa/maa.h, libmaa/log.c, libmaa/decl.h:
  Fixed bug in timers
  Improved logging
  Added more C prototypes for SunOS

1997-03-11  Rik Faith  <faith@dict.org>

  * net.h, net.c, dictd.h, index.c, dictd.c, Makefile.in, daemon.c:
  Added regexp matching, fixed logging

  * regex/Makefile:
  Fixed lib target to prevent everything from being built all the time

  * libmaa/version.c, libmaa/log.c:
  Fixed log_stream bug

1997-03-10  Rik Faith  <faith@dict.org>

  * net.h, servparse.y, net.c, dictd.h, index.c, dictd.c, dictd.8, data.c, dictP.h, daemon.c, configure.in, Makefile.in, TODO, COPYING:
  More work

  * libmaa/version.c, libmaa/maa.h, libmaa/text.c, libmaa/log.c, libmaa/error.c, libmaa/argtest.c, libmaa/argtest.out, libmaa/arg.c, libmaa/Makefile.in:
  Fixed bug in arg parsing
  Added generalized logging capabilities

  * regex/README.DICT: Information file

  * regex/tests, regex/utils.h, regex/split.c, regex/regexec.c, regex/regfree.c, regex/regex2.h, regex/regex.3, regex/regex.7, regex/regerror.c, regex/mkh, regex/regcomp.c, regex/main.c, regex/debug.c, regex/engine.c, regex/cname.h, regex/WHATSNEW, regex/cclass.h, regex/README, regex/Makefile, regex/COPYRIGHT:
  Original files from regex.shar

1997-03-09  Rik Faith  <faith@dict.org>

  * example.conf, index.c, dictd.h, dictzip.h, dictd.c:
  Performance enhancements

1997-03-08  Rik Faith  <faith@dict.org>

  * example.conf, servscan.l, configure.in, data.c, Makefile.in:
  Finish SunOS port

  * libmaa/version.c, libmaa/decl.h:
  Compile without warnings under SunOS

  * servscan.l, fmt.c, net.c, dictd.c, dictP.h, dict.c, dict.1, decl.h, data.c, daemon.c, configure.in, config.h.in:
  Cleanup for SunOS

  * libmaa/argtest.c, libmaa/argtest.out, libmaa/version.c, libmaa/arg.c:
  Updated arg functions to skip over whitespace in a reasonable way.\
  Updated argtest to test these updates.

1997-03-07  Rik Faith  <faith@dict.org>

  * search.c, index.c, look.c, dictd.c, dictd.h, configure.in, servscan.l, wndump.c, jargdump.c, net.c, servparse.y, dictzip.c, dictzip.h, dictrc.sample, dictP.h, decl.h, dict.h, daemon.c, data.c, config.sub, Makefile.in:
  Reorganization for better packaging

  * servparse.y, dictd.c, daemon.c:
  Port to SunOS

1997-03-01  Rik Faith  <faith@dict.org>

  * index.c, dictzip.c, dictd.c, data.c, daemon.c:
  Updates for SunOS

  * libmaa/version.c, dictzip.c, config, Makefile.in:
  Example ocnfig file

  * doc/design.tex, wndump.c, servscan.l, servparse.y, net.c, net.h, index.c, dict.h, dictd.c, data.c, daemon.c, Makefile.in:
  Initial dictd implementation

  * libmaa/version.c, libmaa/timer.c, libmaa/source.c, libmaa/parse.c, libmaa/maa.h:
  Fixed bugs in timer and error routines

1997-02-28  Rik Faith  <faith@dict.org>

  * libmaa/doc/Makefile.in, libmaa/version.c:
  Removed parse and source support from Khepera library

  * libmaa/doc/Makefile.in, libmaa/version.c, libmaa/source.c, libmaa/parse-concrete.c, libmaa/parse.c, libmaa/maa.h, libmaa/maa.c, libmaa/Makefile.in:
  Moved source and parser support to libmaa

  * doc/design.tex: Config files

  * doc/design.tex: More documentation

1997-02-27  Rik Faith  <faith@dict.org>

  * doc/webster.out, doc/design.tex:
  Add doc directory

1997-02-21  Rik Faith  <faith@dict.org>

  * libmaa/README: Updated credits information and version

1997-02-08  Rik Faith  <faith@dict.org>

  * libmaa/version.c: Fix typos

1996-12-26  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Make top-level "tests" target to run all regression tests.
  2) Do not free nseqs after the "return" statement.
  3) Add .dq debugging flag to debug the pending delete queue.
  4) Fix typo that prevented -pg from working (this was most important).

1996-12-25  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Re-did all the Range stuff again.  Here is how it works:
     At parse time, but never again:
      (N_SeqRange (N_Range1 .))      1 .. last (doesn't exist at parse time)
      (N_SeqRange (N_Range2 . .))    first .. last
      (N_SeqRange (N_Range3 . . .))  first, second .. last
     After post-parse processing, and thereafter:
      (N_SeqRange1 .)      1 .. last
      (N_SeqRange2 . .)    first .. last
      (N_SeqRange3 . . .)  first .. last .. step
  2) Added the new dpl_st_range_step_i call, which takes (first, last, step).
  3) Use dpl_copy whenever an nseq is assigned to another nseq (these
     assignments should be (automatically) removed when value tracking and
     CSE are addes).
  4) Moved dom-removal from pl.k to simple.k.  This is more appropriate.

  * libmaa/version.c:
  Major milestone: qsort runs to completion after a little tweaking.
  Here's what needs fixing:
      nseq assignment needs to use dpl_copy
      dpl_st_range uses the old style ranges, not the ones used by N_Range

  Other stuff in this checking:
  1) Exapanded ex4.pro so debug indexing
  2) Finished implementation of flat indexing (vs. SelectSeq)
  3) Added new functions: leseq, combine, flatten, concat
  4) Convert dom into range1
  5) Output DPL for index, concatreduce, combine
  6) Added ad hoc on-the-fly type generation for indexing (similar to that
     for insert/extract)
  7) Fix insert/extract on-the-fly type generation
  8) Print out types of all assignments -- this helps with debugging
  9) Fix type printing as called by tre_print.  Now type variables in a
     tre_print will be correctly identified as 'a, 'b, etc.  Before they
     might all be called 'a even when they were different.  (This was an
     error of printing -- the types were correctly stored as differentiated
     variables.)

1996-12-23  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Get insert/extract working.  For type checking, there is now a callback
     that will be called whenever a type definition cannot be found in the
     usual ways (this is a ``last resort'' callback).  The extract/insert
     type creation callback examines the current tree and creates an
     inference rule for it, making an entry in the symbol table so that this
     won't have to be regenerated again (although this may not currently be
     in the proper scope).  Next, I'll use this same callback to generate
     inference rules for indexing instances.
  2) Re-did all the range stuff.  Now N_Range1, N_Range2, and N_Range3 are
     carried through the transformations end-to-end.  This allows early
     detection of range1, and prevents a lot of dists of 1's.  It also means
     that we can avoid dpl_st_range_p at the Proteus-source level, since this
     function is not working in DPL.
  3) Added transforms to DPL calls for #, +/, ++, and a few others (?).
  4) Fixed some places where _tre_DeleteQueueProhibited was not being
     properly restored.  This led to a situation where the delete queue was
     never emptied, which led to infinite attempts to delete the deleted
     node.

  Next, figure out how to type check indexing.  Was the type system designed
  to handle this?

1996-12-22  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Removed some calls to fixup_scopes() since these should no longer be
     necessary (because of the hook which calls fixup_scopes() automatically
     at tree-insertion time).
  2) Added extensive debugging printouts to flatten.k and simple.k
  3) Added checks to make sure flattening and simplification actually worked.
  4) Fixed some dpl types in header.pro that were overly restrictive.
  5) Delayed removal of primed operators until type checking is no longer
     done.
  6) Totally re-wrote let simplification to deal correctly with changing
     scopes.  This was needed to get qsort.pro to transform.

  qsort.pro transforms now, but the output won't compile.  I need to get type
  checking working for Insert/Extract before I can look for other bugs in the
  transformations.  Although the type inference engine should be able to deal
  with these functions (it was designed to do so), it has never been hooked
  up to the high-level (e.g., Proteus language) code and tested.  Instead of
  using these type inference features to typecheck these functions, I'm going
  to try to use the backdoor I installed for the typechecking of the
  higher-order primed functions.  This should be easier to get working, and
  still makes use of the type inference engine, it just bypasses the
  arithmetic type clauses.

1996-12-14  Rik Faith  <faith@dict.org>

  * libmaa/version.c: 1) Changed spacing of ChangeLog
  2) Re-wrote let flattening (Palmer96 Rule1).  But still need to fixup
     scope.
  3) Re-wrote zip flattening (Palmer96 Rule5).  Would like to simplify this
     by adding a Khepera "optional" match.
  4) Added much more readable output for -V tracing (-dverbose).
  5) Added sscope fixups to be automatically applied at each insertion.
  6) Added printing support for unique node values (-d.unique).
  7) Experimented with removing symbols from the symbol table.  This is
     probably a very bad idea, but I'll leave the code there for now.  (The
     functions aren't used.)
  8) Made removal of pending nodes and queuing of pending nodes a critical
     section.
  9) Made fast post-order walks actually work.  (The logic had been inverted,
     so they were incorrectly used on small trees, but not on the main tree.)

  Still working on let scoping debugging.

1996-12-09  Rik Faith  <faith@dict.org>

  * libmaa/Makefile.in: Fix ChangeLog creation

  * libmaa/doc/extract.pl, libmaa/version.c, libmaa/Makefile.in:
  Added dist target to makefile
  Fixed perl script to work under Perl 5

1996-12-07  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Temporarily removed FORTRAN transformations from build.  They need to be
     updated in the face of other global changes, but they probably need to
     be completely re-written.
  2) Added support for a dpl subdirectory.
  3) Made other changes to get tiny test program to compile with C+DPL.  Now
     I'm working on qsort and am running into scope problems -- the
     transformations don't automaticallly preserve scope, so scopes must be
     propagated by hand.  Hence, forgetting when the scopes need updating is
     easy to do.  The quick fix is probably to re-run the scope updates from
     the ASTRoot frequently.
  4) Make main() function that includes call to dpl_setmem.  Need to add a
     return 0.
  5) Add last-use detection for variables, and insert calls to dpl_fre_nseq.

  This all means that this simple example now compiles with C+DPL:
      #include "header.pro"
      function foo(i:int, j:int):int { return i*j; }
      print [i in [1..30]: foo(i,i)];

  Tomorrow: get qsort to compile as well.

1996-12-01  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  Added query and if-then-else simplification.

  * libmaa/version.c:
  When looking for cpp, first try to use the one that comes with gcc.  Then
  look on the system for one.  We should probably incorporate the GNU cpp and
  hack it so that it won't print warnings for Proteus code.  For now, just
  redirect errors to /dev/null.

1996-11-26  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/error.c:
  1) Added simplify.k and moved all the simplifications there.
  2) Re-wrote the simplifications based on knowledge contained in the
     post-mortem analysis of trans.  Specifically, internested let and
     if-then-else expressions must be handled correctly.  I did the let part
     and will do the if-then-else part next.
  3) Make the uncall functions put identifiers in the top-level scope and
     mark them as DECLARED.  This prevents a N_Var declaration being made for
     them later.  If will also permit us to write type signatures for all of
     these functions, and treat them as builtins.  I think this will
     eliminate the need for moving back-and-forth between infix notation and
     functional notation, since it looks like that only thing that currently
     needs infix notation is the type checker.
  4) Added is_literal call to identifier Proteus literals.
  5) Ripped out the N_Build stuff and added more general call/uncall support
     for nodes which take an N_ExpressionList as an argument (currently,
     N_Sequence and N_Print).
  6) Make things which are already declared as declared, and insert N_Var
     declarations for everything else.
  7) Add C pretty-printing for types in N_Var, N_Param, and N_Function.
  8) Removed number from tree printouts unless -d.enum is used.  These
     numbers were for debugging, but are not useful since we use the N_ names
     for node everywhere.  The other names should probably be deprecated (but
     are still used for default pretty-printing).
  9) In the Khepera language compiler, don't declare any variables introduced
     in a rebuild statement.  Previously, only the root of the rebuild wasn't
     decalred.  This should all be done with typechecking, and will be in the
     next re-write of the Khepera language compiler :)

1996-11-23  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Make add_primed_func_defns propagate the return type as well as the
     argument types.
  2) Added functions to push [a in a_p, b in b_p, ... : ... ] through the
     expression as index operations (alternatively, this could be implemented
     with the now-non-existent zip primitive).
  3) Added functions to handle simple dom() simplification.  More complex
     functions will be easy to add as needed.
  4) Convert (N_Sequence (N_ExpressionList ...)) into (N_Build ...) so that
     these node can be interconverted with N_Call nodes, allowing iterators
     to be pushed through them.
  5) Added support for the "walk" keyword in the Khepera language.  This
     allows a pre-order walk to be performed of an arbitrary node, much like
     the "children" keyword allows the children to be iterated over.
  6) Fixed bug where deleting nodes which were queued for deletion caused a
     non-reentrant function to be called twice.  (Made tre_delete_queued
     reentrant.)
  7) Added font-lock mode definition as a comment in khepera-mode.el.

  This all means that Dan's Rule 0 through Rule 5 are fully impemented.  I'm
  going to work on function call parameter lifting next, and then on last-use
  detection so that DPL memory management can be added....

1996-11-19  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  1) Finally got Palmer96 rules 1-5 implemented.  There are a few problems:
      a) Primed function duplication doesn't work unless the type of the
         function is either specified or can be derived.  It can't be derived
         if the prime function isn't used.  The right way to do this is to
         delete primed functions (or not generated them) unless they are
         used.  However, due to POLYMORPHISM, this isn't possible without
         cooperation from the type system.  Adding this cooperation will take
         time.  Hence, I'm punting on this until we deal with polymorphism in
         general.
      b) I used the "James" method of generating primed functions, and I
         haven't written the part that pushed the zip'd components through to
         indexing.  I'll do that next.
  2) Removed Lar's optimiztion.k for the time being.  It doesn't help us to
     actually generate code and only confuses things.  I'll put it back after
     we can generate C+DPL.
  3) Redid all the call/uncall stuff using a header file.  Now, one line has
     to be added and the call/uncall functions will get created _and_ mapped
     into the xfm Rule body.  See functions.h for the list.
  4) Deactivated a bunch of transformations that do not get us any closer to
     executable code.
  5) Commented some of the rules.
  6) Fixed a few aesthetic bugs in error printing.
  7) Saved Lar's transform.c as transform.lars.c.
  8) Tried to fix the enclosed version of cpp to implement the ANSI #
     stringification directive.  Gave up.  Patched the parser routines to
     find the native cpp instead.  Will delete the local cpp next time -- its
     just too old to be useful, and ptrans requires an ANSI C compiler
     anyway.
  9) tre_fast_postorder_allowed lets you know if a tre_fast_postorder walk is
     possible.  It isn't right now if you aren't walking from the root of the
     labeled tree.

1996-11-15  Rik Faith  <faith@dict.org>

  * libmaa/version.c: New example

1996-11-11  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/maa.c:
  Broke out type dumping routines (for debugging with readable types).
  Make top-level dist target.
  Added top-level version.c and version/copyright printing stuff.  To bump
      the version, make version.stamp and check in the new version.c.
  Tried to free memory that the type inference system creates.  I got some of
      this, but not all of it.  Specifically, I can't figure out how to
      safely free type expressions (Expr in khepera/lib/typ.c).  These
      maintain their own reference counts, but only for internal references,
      not for references from the AST or from the symbol table.  Sometimes
      types get destroyed on-the-fly, so a simple list of all allocated type
      expressions is not sufficient.  It would be nice to get this done
      sometime, since then we could look for real memory leaks and make
      better use of the debugging malloc technology we have available.
  Fixed all obvious memory leaks in the khepera language translator program
      (which doesn't use the type system, and only had some leaks related to
      the symbol-table).

  * libmaa/version.c:
  1) Added code to take advantage of 1 and 2 parameter versions of dpl_range*
  2) Added transformations for dpl_dist*, dpl_restrict*
  3) Print warning when an AST node does not have an entry in header.pro
     (a type isn't needed, just an entry -- at least this way we know about
     it; and, because of the powerful type inference engine, everything
     doesn't have to be explicitly typed -- the engine will figure out what
     the type has to be most (all?) of the time).
  todo) work on -fflatten and -fsimple, especially for if statements

1996-11-10  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/memory.c, libmaa/maa.h, libmaa/basetest.c, libmaa/basetest.out, libmaa/base64.c, libmaa/base26.c, libmaa/Makefile.in:
  1) Fixed up name mangling for multi-arity types.
  2) Hooked up Libmaa memory objects to the type inference.  This gives maybe
     a 10% improvement on short examples.  Oh well.
  3) Made type printing more pretty by using letters instead of %p (this
     is what the base 26 stuff is for in Libmaa).
  4) Looked really hard at how to get polymorphic (and primed functions) to
     print out in executable code.  The problem here is that the type system
     figures out monomorphic types for each instance of a function use.
     E.g., at the N_Call node, monomorphic types have to exist for type
     checking to complete.  However, after figuring out all this information,
     the type system just THROWS IT AWAY!  This is a fine thing to do for a
     type system, since it can just re-figure it out again later.  But it
     isn't very helpful if you want to generate executable monomorphic
     instances for the functions.  I looked in the type engine at the
     function where the monomorphic-instance information exists
     (inf_infer_definition), but there isn't enough information at that point
     to let the high-level code know that a new monomorphic instance needs to
     be generated.  Fixing this is going to require kludging the type system
     so that it has enough information to notify the high-level code via a
     callback.  Then the high-level code has to deal with renaming the
     monomorphic instance and generating the necessary monomorphic executable
     code.  Getting all of these details right was one of the biggest
     problems that I had with the type inference engine in trans.  Based on
     previous experience with trans, I think this problem will take several
     weeks to fix in ptrans.  Hence, I'm going to ignore polymorphic
     functions for now.  Code will only be generated for typed functions and
     for functions that analyze to a single monomorphic instance (and, maybe
     not even the later, since there still isn't enough information at the
     top level to generate a typed C or Fortran function -- that information
     is also lost even though the function is just untyped and isn't actually
     polymorphic).  Primed functions can be handled with Lar's kludge:
     generate (typed) primed versions of all user-defined functions early,
     and generate code for them regardless of the need for such code.
  5) The next big hurdles are to get DPL memory management working, and to
     get all the appropriate DPL functions generated.  The I can start
     checking the flattening transformations.  I need to get all of this done
     by the middle or end of the week so that I can start on the debugging
     support.  In fact, even without memory management, I can start working
     on debugging support, so that's probably what I should do as soon as
     compilable DPL can be generated...

  * libmaa/version.c: Recursive typechecking works.  Joy.

1996-11-08  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  Recursive functions do _not_ typecheck.  Fuck.
  Made automatic function name mangling work for variable-argument functions.
  Fixed types.k (these rules are far too application order-dependent).
  Make ground matching work (e.g., (N_Node 0) matches N_Node without
  any children) in Khephera language.

1996-11-04  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  Fixed pp_* so that default printing styles works.
  Added a bunch of dpl_* primitives.
  Fixed local cpp copy so that ## token concatenation has no warning.
  Added a queue of nodes that have a delete pending.  This allows the
     node that is currently being walked in the tree to be deleted.  This
     had been an impossible operation previously.
  Tightened up error checking in tree walkers.
  Made 'else' actually work in Khepera if clauses.  Previously the else
     clause was executed along with the then clause.

1996-11-02  Rik Faith  <faith@dict.org>

  * libmaa/version.c:
  Starting to add primitive dpl_mul-like operations.

1996-10-31  Rik Faith  <faith@dict.org>

  * libmaa/version.c: Added dpl_build_*
  Added ability to use .. (sametypes) wildcard in var declaration
    (this is essential to be able to type dpl_build_*)

1996-10-30  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/config.sub:
  Added topl.c and pl.k for transformations to a generic parallel library
  Transform various ranges into dpl_st_range_*
  Remove conf.cache when building configure files
  Make config.sub recognize i686
  Removed verbose tree printing so that new tree printing can be more
     selective (e.g., for debugging)
  Fixed bug where a poiner from alloca was used as a symbol name

1996-10-10  Rik Faith  <faith@dict.org>

  * search.c, dict.h, dictzip.c, Makefile.in:
  Work on searching

1996-10-07  Rik Faith  <faith@dict.org>

  * libmaa/maaP.h, libmaa/version.c:
  Changes for Solaris cc compiler

1996-10-03  Rik Faith  <faith@dict.org>

  * libmaa/prtest.out, libmaa/version.c, libmaa/Makefile.in:
  Added -with-nox option to inhibit building X applications
  Added prtest to libmaa suite

  * libmaa/version.c, libmaa/prtest.c, libmaa/pr.c, libmaa/maa.h, libmaa/error.c:
  Made error messages more uniform
  Made process support use file descriptors instead of stream I/O.  You
  should still be able to fdopen on a fd returned from a function, if you
  do all of the I/O yourself.  However, a filter function was added, so
  playing with I/O probably isn't needed.  Coprocesses, or a coprocess chain,
  should be fairly easy to set up now, in a generalized fashion.  Signals
  still aren't handled in a POSIX way, and deaths of children aren't caught
  asynchronously, so support can still be made better.

1996-10-02  Rik Faith  <faith@dict.org>

  * libmaa/pr.c: Before ripping out stream I/O

1996-09-30  Rik Faith  <faith@dict.org>

  * zlib/Makefile, zlib/Makefile.in:
  Add distclean to Makefile

  * zlib/Makefile.in, dictzip.c, Makefile.in, dict.h:
  Got random access reads on compressed file working.

  * libmaa/version.c, libmaa/error.c:
  Make error messages prettier

1996-09-29  Rik Faith  <faith@dict.org>

  * dictzip.c: Update Id string

1996-09-26  Rik Faith  <faith@dict.org>

  * wndump.c, install-sh, jargdump.c, fmt.h, dictzip.c, fmt.c, dict.h, config.sub, configure.in, config.h.in, config.guess, Makefile, Makefile.in:
  General work on formatting and use with configure.

  * libmaa/version.c, libmaa/maa.h, libmaa/pr.c, libmaa/base64.c:
  Work on base64 and process management

1996-09-25  Rik Faith  <faith@dict.org>

  * libmaa/version.c, libmaa/hash.c, libmaa/maaP.h, libmaa/decl.h:
  Finish Solaris port

  * libmaa/maa.h, libmaa/version.c, libmaa/arg.c:
  Make ptrans compile and use internal cpp

  * libmaa/version.c, libmaa/hash.c, libmaa/configure.in, libmaa/config.h.in, libmaa/Makefile.in:
  Hash bigendian and little endian integers the same way
  This allows us to have test programs that produce the same results on
  different architectures.

  * libmaa/settest.out, libmaa/settest.c:
  Print out random stuff

  * libmaa/version.c, libmaa/settest.out, libmaa/settest.c, libmaa/rnd.c, libmaa/hashtest.c, libmaa/hashtest.out, libmaa/Makefile.in:
  Hardcoded random numbers for test functions

  * libmaa/version.c, libmaa/settest.c, libmaa/maaP.h, libmaa/mkrnd.c, libmaa/decl.h, libmaa/hashtest.c, libmaa/configure.in, libmaa/Makefile.in:
  Stuff for Solaris port

  * libmaa/config.guess:
  Make sure all library functions are under LGPL
  Update configure support from autoconf-2.10

1996-09-24  Rik Faith  <faith@dict.org>

  * wndump.c, output.c, fmt.c, fmt.h, encode.c, engine.c, dictzip.c, decode.c.save, compressdict.c, decode.c, compressdict.1, compress2.c, compress3.c, buildindex.c, COPYING.look, buildindex.1, COPYING:
  Move to version 2.0

  * libmaa/sltest.c, libmaa/version.c, libmaa/maaP.h, libmaa/maa.h, libmaa/Makefile.in, libmaa/base64.c:
  Added base64 routines
  Fixed warnings generated under Linux

1996-09-23  Rik Faith  <faith@dict.org>

  * libmaa/xmalloc.c, libmaa/stringtest.c, libmaa/timer.c, libmaa/string.c, libmaa/sl.c, libmaa/strdup.c, libmaa/settest.c, libmaa/set.c, libmaa/prime.c, libmaa/primetest.c, libmaa/listtest.c, libmaa/list.c, libmaa/error.c, libmaa/debugtest.c, libmaa/decl.h, libmaa/debug.c, libmaa/bit.c, libmaa/Makefile.in, libmaa/COPYING.LIB, libmaa/COPYING:
  Make sure all library routines are under GNU LGPL.
  Make sure all test programs are under GNU GPL.
  Include copies of GPL and LGPL for stand-alone libmaa.

  * zlib/zutil.c, zlib/zutil.h, zlib/zlib.rc, zlib/zlib.def, zlib/zlib.h, zlib/zconf.h, zlib/trees.c, zlib/uncompr.c, zlib/minigzip.c, zlib/infutil.c, zlib/infutil.h, zlib/inftrees.h, zlib/inftrees.c, zlib/inflate.c, zlib/inffast.h, zlib/infcodes.h, zlib/inffast.c, zlib/infblock.h, zlib/infcodes.c, zlib/infblock.c, zlib/gzio.c, zlib/descrip.mms, zlib/example.c, zlib/deflate.h, zlib/crc32.c, zlib/deflate.c, zlib/configure, zlib/algorithm.doc, zlib/compress.c, zlib/adler32.c, zlib/Makefile.wat, zlib/README, zlib/Makefile.sas, zlib/Makefile.tc, zlib/Makefile.riscos, zlib/Makefile.in, zlib/Makefile.msc, zlib/Makefile.bor, zlib/Makefile.dj2, zlib/Makefile.b32, zlib/Make_vms.com, zlib/Makefile, zlib/INDEX, zlib/ChangeLog:
  zlib-1.0.4

  * output.c, engine.c, dict.h, encode.c, decode.c.save, dict.1, decode.c, compressdict.1, compressdict.c, compress3.c, buildindex.1, compress2.c, Makefile, COPYING.look:
  dict-1.1

  * output.c, look.c, dictrc.sample, engine.c, dict.h, dict.1, dict.c, buildindex.1, buildindex.c, Makefile, COPYING:
  dict-1.0

