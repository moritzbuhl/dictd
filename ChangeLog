2005-06-09  Aleksey Cheusov  <vle at gmx.net}

  * NEWS: NEWS file update

  * NEWS, configure.in:
  news updated
  version --> 1.10.1

2005-06-08  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  minor fix

  * libmaa/decl.h:
  fixed: compilation bug on smarc64/xxxBSD.
      Thanks to micha137 for bu report and patch.

2005-05-28  Aleksey Cheusov  <vle at gmx.net}

  * index.c:
  By default 'dictd' is run in UTF-8 mode unless you ./configure it
     with --with-system-utf8-funcs option

  * dictfmt.c:
  added: --utf8 option. Use it to create utf-8 dictionaries.
      Use of '--locale ru_RU.UTF-8' is deprecated unless you
      ./configure dict packages with --with-system-utf8-funcs

  * dictP.h:
  MB_CUR_MAX__: 7 --> 6

  * dict.1:
  fixed: typo. Thanks to A Costa for reporting the bug report.

2005-04-14  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8, dictd.c, dictd.h, servparse.y, servscan.l:
  By default dictd, when running as daemon, writes a PID
      to /var/run/dictd.pid file. This can be overriden by
      'pid_file' keyword in dictd.conf (See dictd.8) of command line
      option '--pid-file'

      Thanks to Josef Novak for sudgestion and patch.

2005-04-13  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8:
  fixed: dictd.8 says that 'lev' strategy doesn't work
      with utf-8 dictionaries, but it does since release 1.9.13

  * configure.in, dictP.h, dictd.c, dictfmt.c, index.c, lev.h, mbrlen.c, mbrtowc.c, mbstowcs.c, mbtowc.c, str.c, wcrtomb.c, wctomb.c:
  unless 'dictd' is configured using './configure --with-system-utf8-funcs'
      'dictd' and 'dictfmt' use built-in UTF-8/UCS functions, i.e.
      there is no need for --locale xx_YY.UTF-8. As a result
      'dictd' can be compiled and run on platforms
      which doesn't have UTF-8 locale.

2005-04-12  Aleksey Cheusov  <vle at gmx.net}

  * configure.in, NEWS:
  NEWS update (1.10.0 release)
  version: 1.9.15 ---> 1.10.0

  * example.conf:
  added: section containing global option

  * example_mime.conf:
  added: Yet another example demonstrating `database_mime' keyword

  * configure.in, dictP.h:
  fixed: compilation bugs on OpenBSD-3.4 which doesn't provide
      CODESET macro in <langinfo.h>

  * NEWS: nothing

  * dict.1, dictfmt.1:
  Documentation update

2005-04-09  Aleksey Cheusov  <vle at gmx.net}

  * plugin.c, servparse.y:
  fixed: `default_strategy' keyword is not implemented
      for `database_plugin' section

2005-04-01  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c:
  fixed: database_mime + invisible

  * dictfmt.c:
  fix

2005-03-31  Aleksey Cheusov  <vle at gmx.net}

  * INSTALL:
  minor changes

  * dictd.8:
  Documentation for `database_mime' section

  * dictfmt.c:
  The special headword 00-database-mime-header is never wrapped

  * example_plugin_dbi.conf:
  better explanation

2005-03-30  Aleksey Cheusov  <vle at gmx.net}

  * index.c:
  indentation

  * servparse.y:
  nothing

  * dict.c:
  added: -M option to `dict' for sending OPTION MIME command to DICT server

2005-03-29  Aleksey Cheusov  <vle at gmx.net}

  * dictunformat, servparse.y, dictfmt.c, defs.h, dictd.c, daemon.c:
  dictfmt, dictd:
     added new option --mime-header to `dictfmt'.  If
     applied, `dictfmt' creates the special headword
     00-database-mime-header, `dictd' read it while initializing the
     database and prepend definitions with it (if OPTION MIME command was
     sent by client). Ability to set the MIME header for the database is
     useful in combination with `database_mime' keyword in dictd.conf,
     See dictd.8 for more information.
  `dictunformat' skips 00-database-mime-header headword

  * index.c: nothing

  * defs.h, dictd.c, index.c, index.h, servparse.y, servscan.l, daemon.c:
  added: database_mime, dbname_nomime and dbname_mime keywords
      in dictd configuration file

      Example:

         database cool_db___nomime  {...}
         database cool_db___mime  {...}

         # The following section adds new database cool_db
         # When client acceses it and DOES send OPTION MIME command
         # to dictd it actually accesses the database `cool_db___mime'
         # otherwise (no MIME OPTION command was set)
         # the database `cool_db___nomime' is used.
         # This allows server to provide databases with support
         # of both plain text and formatted definitions
         # with appropriate MIME header (roff, html etc...)
         database_mime cool_db {
            dbname_mime   "cool_db___mime"
            dbname_nomime "cool_db___nomime"
         }

2005-03-28  Aleksey Cheusov  <vle at gmx.net}

  * NEWS, dictd.8, dictd.c, dictd.h, servparse.y, servscan.l:
  ADDED: Global Setting section in dictd.conf
      Now configuration files can include all required option
      (command line option are no required anymore)

      dictd.conf may look like this

        global {
           port             2628
           delay            600
           depth            10
           limit            100
           timestamp        0

           log_option       "found"
           log_option       "notfound"
           log_option       "stats"
           log_option       "client"

           debug_option     "init"
           locale           ru_RU.UTF-8

           add_strategy     "phonetic" "Phonetic search"
           add_strategy     "reverse"  "Full text search in definitions"

        #   listen_to        127.0.0.1
        #   syslog
        #   syslog_facility daemon
           log_file         "/var/log/dictd.log"
        #   fast_start
        #   without_mmap
        }

2004-12-23  Aleksey Cheusov  <vle at gmx.net}

  * NEWS: updates in NEWS

  * libmaa/Makefile.in, libmaa/arggram2c, libmaa/arggram2c.in, libmaa/configure.in, configure.in:
  changes necessary for Solaris which loves old awk
  1.9.14 --> 1.9.15

2004-12-13  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in: man plugin removed

2004-11-25  Aleksey Cheusov  <vle at gmx.net}

  * NEWS:
  added information about 1.9.15 release

2004-11-19  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8, dictfmt.c, dictunformat, index.c, defs.h:
  For 8-bit databases (non-ASCII and non-UTF8), `dictfmt' generates
     special headword 00-database-8bit-new
     (earlier versions generated 00-database-8bit)
  When `dictd' encounter `00-database-8bit' headword in .index file,
     it logs error message and exits

  * example2.conf:
  demonstration of new keyword `default_strategy'

  * dictfmt.c, index.c:
  Because of sorting order of 'sort -df' and `index.c:compare_alnumspace'
      differ, 8-bit (non-ASCII and non-UTF-8) databases are built
      using `sort' utility whithout options and with LC_ALL=C

      index.c is changed appropriately.

      NOTE!
      This makes `dictd' incompatible
      with 8-bit databases built using dictfmt older than 1.9.15!!!

2004-11-17  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/arg.c:
  removed: C++ style comments

  * libmaa/hash.c, libmaa/sl.c, libmaa/string.c, libmaa/arg.c, lev.h, plugins_common.c, plugins_common.h, strategy.c, strategy.h, dict.c, dictdplugin_judy.c, dictzip.c, index.c, daemon.c:
  fixed: a few warning messages produced by gcc

2004-11-07  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/log.c:
  code clean-ups

  * dictd.c, index.c:
  better logging

2004-10-12  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, defs.h, dictd.8, dictd.c, index.c, plugin.c, servparse.y, servscan.l:
  ADDED: `default_strategy' key word in configuration file.
      This allows to set default search strategy (`.') per database.
      See dictd.8 for more info
  Documentation update

  * daemon.c, dictd.c:
  FIXED: `dictd' dies when client tries to obtain information
      about virtual database (SHOW INFO <virt_db>).
  lots of `const' modifier in daemon.c
  added: --test-show-info option to `dictd'

  * daemon.c, data.c, dictd.c, index.c, plugin.c:
  DICT_EXACT --> DICT_STRAT_EXACT, etc.

  * dictfmt.1, dictfmt.c:
  added: --default-strategy option.
      Sets the default search strategy for the database.
      It will be used instead of strategy '.'.
      Special entry 00-database-default-strategy is created for this purpose.
      This option may be useful, for example,
      for dictionaries containing mainly phrases but the single words.
      In any case, use this option
      if you are absolutely sure what you are doing.
  dictfmt.1 update

  * strategy.c, strategy.h:
  added: functions `get_strategy', `lookup_strategy_ex'
  DICT_EXACT --> DICT_STRAT_EXACT, DICT_PREFIX --> DICT_STRAT_PREFIX etc.
  adde: new define DICT_STRAT_DOT for strategy `.'

  * libmaa/log.c:
  `log_syslog (NULL)' closes syslog
  `log_file (NULL, NULL)' closes file for logging
  `log_stream (NULL, NULL)' closes FILE* stream for logging

  * libmaa/maa.h:
  debugging information switched on using -d option of dictd
      is logged to syslog/file/FILE_stream, but printf'ed to stdout.

2004-10-08  Aleksey Cheusov  <vle at gmx.net}

  * index.c:
  fixed: The function `dict_search_bmh' works incorrectly in utf-8 mode
      on non-glibc systems, e.g. FreeBSD.
      As a result `suffix', `substring' and `word' work incorrectly
      with UTF-8 databases.

  * libmaa/Makefile.in:
  ./ --> awk -f

2004-10-06  Aleksey Cheusov  <vle at gmx.net}

  * configure.in, dictP.h, dictd.c, iswalnum.c, iswspace.c, towlower.c:
  `_ALL_SOURCE' macros is define on Microsoft Interix in dictP.h file
  added: `iswalnum.c', `iswspace.c', `towlower.c' files to always
     support UTF-8 on platforms which do not provide mentioned functions
     (FreeBSD4.X / MS Interix)
  `wait3' is replaced for `waitpid' if it is unavailable (Interix)
  checks for the function `initgroups' which is unavailable on Interix
  `echo -en' is replaced for `printf' in configure.in
  `AC_FUNC_MMAP' is replaced for `AC_CHECK_FUNC(mmap)'
     because `mmap' work perfectly on Windows (Cygwin and Interix).
     `AC_FUNC_MMAP' implements too strict tests
     As a result `mmap' will be used in `dictd' if
     it is built on the latest versions of Cygwin or Interix
  `dictd' has been slightly tested on Interix (SFU-3.0).
     It seems it works perfectly both as Interix daemon and Windows service
     with ASCII databases in the following configurations:
     w2k workst/server + GNU make-3.76/3.80 + gcc-2.7.2.3/egcs-20000731 +
       yacc/bison

     NOTE: GNU make is needed for building `dictd'

  * getopt.c:
  fixed: compilation bug on Microsoft Interix.
      _ALL_SOURCE macro is defined if __INTERIX or __OPENNT are defined

  * net.c:
  `ioctl(fd, TIOCNOTTY, 0);' is not called on MS Interix/Cygwin/HP-UX
    if there is no macro `TIOCNOTTY'.
    As a result net.c can be compiled successfully on Interix

2004-10-05  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/xmalloc.c:
  compiler warning message fixed

2004-10-04  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c:
  fix: logging is directed to stderr, when -i option applied

2004-09-21  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8:
  typos fixed

  * configure.in:
  nothing serious

2004-07-08  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_dbi.c:
  'utf8' flag is set TRUE by default
  'all_chars' flag is set to FALSE by default, unless 00-database-allchars
      is present in database
  added new options: "all_char" and "utf8"

  * dictunformat, dictunformat.1:
  documentation update

2004-06-15  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  fixed: because of '-lc -lc' passed to linker executables
      cannot be built on latest cygwin

2004-06-06  Aleksey Cheusov  <vle at gmx.net}

  * NEWS: corrections

  * libmaa/configure.in: *** empty log message ***

  * libmaa/configure.in:
  libmaa version ==> 0.99

  * Makefile.in, configure.in:
  version ==> 1.9.14

  * NEWS:
  updated to 1.9.14

  * NEWS:
  fixed a typo

2004-05-30  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/timer.c:
  a few checks for NULL

  * dictd.c:
  exit status of child processes is logged with '--log server' option.
  code clean-ups

  * dictd.c, net.c:
  detaching from terminal again

  * libmaa/arggram2c: comments changed

2004-05-28  Aleksey Cheusov  <vle at gmx.net}

  * mbrlen.c, mbrtowc.c, mbstowcs.c:
  fixed: on systems having no mbrlen(3) function (FreeBSD4),
      dictfmt assert(3)s
      if run with 8-bit --locale option and headword contains
      0xFF or 0xFE symbols (for exsmple, KOI8-R and CP1251 character sets).

2004-05-25  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8: dosumentation update

2004-05-24  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  "The original data was distributed..." message is wrapped to 72 (default)
      columns even if '--columns 0' was specified.

  * dictfmt.c:
  Special 00-database-XXX headwords do not affect 00-database-alphabet,
      i.e. only characters from "real" headwords
      are added to alphabet.
      This makes LEV search strategy a little faster,
      especially search in dictionaries
      containing non-Latin symbols like Cyrillic.

  * dict.1, dict.c:
  If a connection to DICT server faild, dict exits with exit status 41
  documentation update

2004-05-21  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8, dictd.c, net.c, net.h:
  dictd: added --listen-to option for binding socket to the specified address
  documentation update

2004-05-16  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/configure.in, libmaa/log.c:
  Where vsyslog function is determined by autoconf
      but the platform-dependant #defines

  * libmaa/log.c:
  code clean-ups: duplicated code is separated into a function

  * dictd.c, net.c:
  'dictd' opens a log file (-L option) before releasing root priviledges.
      As a result log file can be created under /var/log directory
  log file and syslog is opened once.
  The error messages of sanity checks are written to log file (or syslog)
  "close everything" section has been removed from net.c:net_detach
      This is necessary because we open log file
      before detaching from a terminal

  * dictfmt.c:
  -t option implies '--columns 0' to preserve original formatting

2004-05-15  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c:
  fixed: SHOW INFO command sends incorrect data to the client if
      the information about database is set using 'info' keyword.
      Affected versions: 1.9.12-1.9.13

2004-05-14  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/Makefile.in, libmaa/arg.c, libmaa/arggram.txt, libmaa/arggram2c, libmaa/argtest.c, libmaa/argtest.in, libmaa/argtest.out:
  fixed: arg_argify parses string incorrectly, for example,
      for the input 1''2''3''4 it produces single token 1'''.
      As a result 'dictd' may parse TCP commands incorrectly.

      arg_argify is fully reimplemented and now uses Mealy machine
      similar to that used by lex and flex.

  argtest.c is reimplemented
  more tests for arg_argify function have been added

  * dictdplugin_dbi.c: fixed: warning message produced by compiler

  * NEWS: fixed misspell

2004-04-26  Aleksey Cheusov  <vle at gmx.net}

  * codes.h:
  added: missing response code

  * dict.1, dict.c:
  exit status again: fixes, improvements, documentation update

2004-04-23  Aleksey Cheusov  <vle at gmx.net}

  * dict.c:
  In case of an error, non-zero exit status returned by 'dict'

  * daemon.c:
  more information status message printed by dictd

2004-04-05  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8, dictd.c:
  SIGUSR1  causes  dictd  to unload databases. Then dictd returns 420 status
   (instead of 220). To load databases again,  send  SIGHUP  signal.  Because
   database  files  are  mmap'ed(2)  ,  it is impossible to update them while
   dictd is running.  So, if you need to update  database  files  and  reread
   configuration  file,  first,  send  SIGUSR1  signal  to  dictd  to  unload
   databases, update files, and then send SUGHUP signal to load them again.

2004-03-24  Aleksey Cheusov  <vle at gmx.net}

  * example_plugin_dbi.conf: revert --> reverse

  * example_plugin_dbi.conf, NEWS, configure.in:
  version ==> 1.9.13
  another sample strategy for DBI plugin
  NEWS file update

  * dictd.c, dictdplugin_dbi.c:
  code clean-ups

  * plugin.c:
  log plugin failure to stderr

2004-03-23  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c, dictdplugin_dbi.c:
  fixes for call dictdb_free

2004-03-22  Aleksey Cheusov  <vle at gmx.net}

  * index.c:
  fixed: if database has no 00-database-alphabet headword,
      "global" alphabet is built incorrectly. As a result
      dictd may work (FreeBSD - affected) incorrectly with LEV strategy.
      Affected versions: 1.9.12

2004-03-21  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, configure.in, dictdplugin_dbi.c, example_plugin_dbi.conf:
  ADDED: plugin using libdbi library for implementing DICT database using
    SQL server. It is possible to specify custom search strategies
    by specifying SQL query.

    The following option are currently supported:

      driverdir       - path to DBI drivers
      drivername      - DBI driver name
      option_host     - host to connect to
      option_port     - port to connect to
      option_dbname   - database name
      option_username - user name for authorizing to SQL server
      option_password - user password for authorizing to SQL server
      query_define    -        SQL query for implementing DEFINE command
      query_<SEARCHSTRATEGY> - SQL query for implementing
             SEARCHSTRATEGY (MATCH command).
             SEARCHSTRATEGY is not limited to the "standard" strategies.

    See the file example_plugin_dbi.conf for sample of how
      this plugin can be configured.

    SQL queries should return 1-column result by using SELECT command.
      %q sequence inside SQL query is expanded to user's query.
      %% is expanded to single % sign.

    This plugin obviously gives a simplest way to implement editable
      dictionaries, not by DICT protocol, but, for example, with a help
      of WEB interface.

    Hack! To resolv DBI driver's symbols, dictd is currently linked with
    libdbi. Later, this will be fixed.

2004-03-19  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c, dictdplugin_judy.c, lev.h, plugin.c:
  code clean-ups
  debugging code 'fprintf (stderr' code has been removed

2004-03-18  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_judy.c, heap.h, plugins_common.c, plugins_common.h:
  functions, common to plugins have been moved to plugins_common.{h,c}

  * heap.c:
  HEAP_MAGIC number is cheched by every heap_XXX function. (assert(3))

  * dictd.c, libmaa/maa.c:
  maa_shutdown function is not called automatically
      when application terminates. Run it explicitly.

2004-03-11  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, NEWS, configure.in:
  If lex and yacc are missing, ./configure shows an error message and exits

2004-03-10  Aleksey Cheusov  <vle at gmx.net}

  * configure.in, libmaa/configure.in:
  dictd / libmaa version has been changed to 1.9.12 / 0.97

  * Makefile.in:
  'make dist' generates C code for lexers and parsers using flex and bison.
      So, lex/flex and yacc/bison are not necessary for building 'dictd'
      from tarball.

  * NEWS:
  update to 1.9.12

2004-03-06  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c:
  fixed: 'daemon_crlf' works incorrectly
      if argument 's' doesn't end with '\n' and 'dot' != 0
      (broken .dict file)

  * daemon.c:
  fixed: 'daemon_printf' function overflows buffer
      when a printed string is "\n".

2004-02-24  Aleksey Cheusov  <vle at gmx.net}

  * nl_langinfo.c, dictP.h, dictd.c, dictfmt.c, configure.in:
  nl_langinfo function is used to detect
      whether dictd/dictfmt uses 8bit, utf-8, or C locale.

2004-02-23  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_judy.c:
  fixed: if a requested headword has more than one definition,
         DEFINE command always returns the first one

2004-02-07  Aleksey Cheusov  <vle at gmx.net}

  * dictl.in:
  fixed: incorrect charset determination.
      Thanks to Roland Rosenfeld for report and patch.

2004-01-28  kirk  <kirk at cheusov}

  * dictfmt.1, dictfmt.c:
  Added --break-headwords option for use with --headword-separator, so
  each headword is written on its own line of the .dict file.

2004-01-27  Bob Hilliard  <hilliard at debian.org}

  * dictfmt.1, dictfmt.c:
  Patched dictfmt.c to corrrect formatting of database-info with the -f
  option.
  Corrected typo in dictfmt.1

2004-01-25  Aleksey Cheusov  <vle at gmx.net}

  * dictl.in, dictl.1:
  dictl analyses PAGER variable to set a pager.

  * dictl.1, dictl.in:
  dictl checks whether recode/iconv/konwert/locale commands are available

2004-01-24  Bob Hilliard  <hilliard at debian.org}

  * dictl.in, dictl.1:
  Modified dictl script to test for the presence of /usr/bin/recode,
  and default to using iconv if recode is not present.
  Update dictl.1 to mention this.

2004-01-16  Aleksey Cheusov  <vle at gmx.net}

  * deps, dictdplugin.h, dictdplugin_judy.c, index.c, index.h, plugin.c:
  dictdplugin_judy implements the correct LEV search strategy
      for utf-8 dictionaries.
  Global 8-bit and ASCII alphabets (a list of alphanumeric and space characters)
      are passed to plugins (plugin.h)

2004-01-13  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  00-database-short is added to .dict file because
      older dictd versions need it.

2004-01-08  Bob Hilliard  <hilliard at debian.org}

  * dictfmt.1:
  Clarified what goes into the 00-database-info and what is considered
  the first headword

2004-01-08  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c:
  'dictd --test|--test-file' notifies about invalid database name

  * mbrtowc.c:
  utf8_to_ucs4 acceps result == NULL

  * plugin.c:
  more verbose logging

  * str.c, str.h:
  function for copying utf-8 string represented
      as a sequence of MB_CUR_MAX+1 bytes

  * daemon.c, dictdplugin_judy.c, index.c, lev.h:
  code related to LEV strategy has been moved to lev.h

  * libmaa/doc/Makefile.in:
  Documentation is not extracted from parse.c because
    it is no longer available.

  * plugin.c:
  code cleanups

2004-01-07  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c, dictd.8, example_complex.conf:
  '{match,define} {*,!}' ignore invisible dictionaries.
      Now there is no reason to separate visible and invisible dictionaries
      by database_exit command, as a result
      this simplifies a configuration file.

  * dictfmt.c:
  special headwords are not copied to .dict file

  * index.c:
  insertions at the end of word for LEV strategy (utf-8)

  * index.c:
  lev strategy again

  * configure.in:
  fixed: typo

  * libmaa/flags.c:
  fixed: the following program should not end with exit code 0

    #include "maa.h"

    int main (int argc, char **argv)
    {
       flg_register(1, "flag1" );

       flg_set ("none");

       flg_set ("flag1");
       printf ("flag=%d\n", flg_test (1));

       flg_set ("*flag1");
       printf ("flag=%d\n", flg_test (1));

       return 0;
    }

  * dictd.c:
  LC_CTYPE and LC_COLLATE are set.
      As a result date and time are printed to log using "C" locale.

2004-01-06  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.1, dictfmt.c:
  added: --columns options to 'dictfmt' which sets a number of columns for
      wrapping text. See dictfmt.1. By default this value is 72.

  * dictP.h:
  #define for wcwidth(3) if it is not implemented

  * configure.in:
  added: test for presense of 'wcwidth' function

  * Makefile.in:
  'make distclean' removes autom4te.cache directories

  * dictfmt.c:
  'mbswidth_' also counts non-printable symbols (+1)

  * dictfmt.c:
  dictfmt correctly wraps utf-8 strings at pos 79

2004-01-05  Bob Hilliard  <hilliard at debian.org}

  * dictfmt.c: Fix formatting problems

2004-01-05  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  'dictfmt -f' uses default FMT_MAXPOS
  'dictfmt -f' removes leading space character from definitions

  * dictl.in:
  fixed missing double quotes

  * defs.h, dictd.c, index.c:
  dictd's LEV search strategy works correctly with utf-8 dictionaries.
      You should rebuild your databases for this to work.
      dictfmt 1.9.12 or later is required.
      Special headword 00-database-alphabet is used.

2004-01-04  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  special headwords are not copied to .dict file

2003-12-30  Aleksey Cheusov  <vle at gmx.net}

  * dictunformat:
  00-database-alphabet is skipped

  * dictfmt.c: *** empty log message ***

  * libmaa/maa.h, libmaa/string.c:
  added: new functions and defines
      'str_pool_init_position', 'str_pool_next_position',
      'str_pool_get_position', 'str_pool_readonly', 'str_pool_iterate',
      'str_pool_iterate_arg', 'STR_ITERATE' and 'STR_ITERATE_END'
      to iterate over strings in the string pool.

  * dictfmt.c:
  fixes

  * dictfmt.c:
  new special headword 00-database-alphabet is created which will be used
      for implementing LEV strategy for utf-8 dictionaries.
      Its definition consists of all characters present in the headwords.

2003-12-24  Aleksey Cheusov  <vle at gmx.net}

  * index.c:
  When utf-8 locale is set,
      'toupper' function is called for ascii characters only.

  * daemon.c:
  fixed: SHOW SERVER cuts off long database names

  * Makefile.in:
  fixed: 'make dist'.
      dictd-1.9.11 tarball was made without ChangeLog file.
      Now it is in its usual place.

2003-12-18  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  fix for 'make ChangeLog'

2003-12-08  Aleksey Cheusov  <vle at gmx.net}

  * NEWS: *** empty log message ***

  * NEWS, configure.in, libmaa/configure.in:
  version        ==> 1.9.11
  libmaa version ==> 0.97
  NEWS update

  * dictfmt.c:
  added: --license|--version options
  some tricks about indentation

  * dictd.c, dictzip.c, dict.c:
  changed --license|--help|--version message

2003-12-05  Bob Hilliard  <hilliard at debian.org}

  * dictfmt.1:
  Clarified and extended test regarding database headers in dictfmt.1

  * dict.c, dictd.8, dictd.c, dictfmt.c:
  Added Usage: line to help message in dict.c, dictd.c, and dicfmt.c
  Clarified --locale requirements in dictd.8

2003-11-30  Aleksey Cheusov  <vle at gmx.net}

  * NEWS:
  NEWS file becomes a part of dictd distribution

2003-11-26  Aleksey Cheusov  <vle at gmx.net}

  * example_complex.conf:
  'lev' strategy is also disabled for standard databases

  * index.c:
  "'locale '%s' can not be used ..." error message is put to log file

2003-11-05  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  'make distclean' removes 'dictl' and 'colorit' executables

  * INSTALL, example_complex.conf:
  documentation update

2003-11-03  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, configure.in, defs.h, dictdplugin-config.in, dictdplugin.c, dictdplugin.h, plugin.c, strategy.h:
  constants for search strategies and function names
      are no longer in dictdplugin.h.
  removed a lindictdplugin.a
  colorit script and man page is installed and uninstalled by
     make install/make uninstall/make and install.colorit/make uninstall.colorit
     commands

  * colorit.1, colorit.in:
  'colorit' sets the  define HOME for a preprocessor
      using -D command line argument.
  Documentation update for 'colorit'

2003-10-31  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  CFLAGS is changed when we know exactly the plugins supported

  * configure.in:
  tests for presence of libJudy and Judy.h
  'configure' disables a plugin support automatically
    instead of showing an error message.
  'configure' shows some details about configuration before exiting

  * Makefile.in, configure.in:
  checks for libJudy and Judy.h

  * daemon.c, data.c, dictP.h, dictd.h, net.c, plugin.c, strategy.c:
  a bit of magic of #include's order. The result is that
      dictd* can be built on Solaris-9
  fixed: yet another warning message

2003-10-30  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  better checking for presence of functions which are not in libc

2003-10-28  Aleksey Cheusov  <vle at gmx.net}

  * colorit.in:
  added: --pp, -h and -V aoptions
  Optional [files...] arguments are handled correctly

  * colorit.1:
  initial version od colorit.1

  * colorit.in:
  spaces are allowed inside regexps and inserted strings. In this case
  script becomes gawk-spesific (3.1?)
  m4 is used as a preprocessor by default

2003-10-27  Aleksey Cheusov  <vle at gmx.net}

  * configure.in, dictP.h, dictfmt.c, getopt.c, getopt_long.c, setenv.c:
  'getopt_long' again
  'setenv' implementation for Solaris-9

2003-10-26  Aleksey Cheusov  <vle at gmx.net}

  * dictl.in:
  ~ replaced for $HOME for shells that disalike it

  * libmaa/Makefile.in, libmaa/configure.in, libmaa/maaP.h:
  checking for presence of getopt(3) and SIZEOF_VOID_P define

  * libmaa/text.c:
  fixed: warning messages produced by latest gcc

  * libmaa/list.c:
  fixed : a warning message produced on 64-bit archs

  * configure.in, dictP.h, getopt.c, getopt_long.c:
  better checking for getopt_long. As a result dictd/dictfmt/dictzip/dict
      can be built on platforms having no getopt_long(3) present in GLIBC

  * dictzip.c, index.c:
  fixed: a warning messages produced on 64-bit archs

  * dictfmt.c:
  fixed : a warning messages produced by latest gcc

  * parse.c:
  changes necessary to compiledictd on MacOS-X 10.1 (cc - gcc2.95.2)

2003-10-22  Aleksey Cheusov  <vle at gmx.net}

  * plugin.c:
  fixes for invisible + virtual + plugin
  strategies disabled by 'disable_strategy' keyword
       are not passed to plugins

  * example_complex.conf:
  new comments

  * index.c:
  fixes for 'invisible' + 'plugins' + 'virtual dictionaries'
  code cleanups

  * dictdplugin_judy.c:
  prefix strategy becomes simplier
  removed: local 'disable_strat' option

  * defs.h: *** empty log message ***

2003-10-20  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c:
  dictd correctly reloads configuration file when --pp is used

  * index.c:
  more verbose -dsearch

2003-10-14  Aleksey Cheusov  <vle at gmx.net}

  * strategy.c, strategy.h, dictd.8, dictd.c, example_complex.conf, plugin.c, plugin.h, daemon.c:
  a few fixes

  * dictd.8, dictd.c, example_complex.conf, parse.c, parse.h:
  added: prs_file_pp function to parse.c
  added: dictd -pp <prog> sets a preprocessor for configuration files
      See dictd.8 and example_complex.conf.

2003-10-13  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  libnsl is really optional

  * dictdplugin_judy.c:
  word, soundex, re, regexp, suffix and substring strategies are removed
      from judy plugin because iterattion over keys is extremely slow.

  * example_complex.conf: *** empty log message ***

2003-10-11  Aleksey Cheusov  <vle at gmx.net}

  * dictl.in:
  filename is doublequoted

  * index.c:
  fix for the previous fix ;-)

  * Makefile.in, configure.in:
  plugin support on FreeBSD-4.8

  * Makefile.in, clientparse.y, clientscan.l, configure.in, index.c, servparse.y, servscan.l:
  changes necessary to build dictd/dict/dictfmt/dictzip on FreeBSD4.8

2003-10-08  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/configure.in, libmaa/maaP.h:
  better checking for getopt(3)

  * ChangeLog:
  ChangeLog is removed from CVS repository.
      There is no need to it there because it can be built using
      'make ChangeLog'.

  * dictl.in:
  additional checks

  * colorit.in, configure.in:
  added: initial version of 'colorit', a simple script that can color your
      dict's output.

  * dictl.1, dictl.in:
  added: initial version of dictl

2003-10-02  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/config.h.in:
  removed: libmaa/config.h.in

  * dictd.8:
  documentation update

  * daemon.c, dictd.c, index.c:
  info/name keywords in 'database_virtual' section can handle
      entry name beginning with @ symbol in a similar way
      as 'database' and 'database_plugin'

2003-10-01  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c: *** empty log message ***

  * defs.h, dictd.c, example_complex.conf, dictd.8, dictd.h, index.c, servparse.y, servscan.l:
  added: ability to disable stategy for a particular database
      using a keyword "disable_strategy".

      See dictd.8 and example_complex.conf

  * libmaa/string.c:
  fix

  * dictfmt.c:
  changes for making databases compatible with older dictd

  * config.guess, config.sub, libmaa/config.guess, libmaa/config.sub:
  updated config.{sub,guess} files

2003-09-30  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c, dictfmt.c:
  fixed: --headword-separator doesn't work with -f, -p and -v formats

  * dictfmt.c:
  fixed: dictfmt -f doesn't work correctly if the first two lines are empty
      Affected versions of dictfmt:  1.6.1-1.9.10

2003-09-28  faith  <faith at dict.org}

  * dictfmt.c: Changes for updated VERA and FOLDOC databases

2003-09-19  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin-config.in:
  fixed: typo

  * index.c, libmaa/source.c, libmaa/string.c, parse.c:
  a few strlcpy have been replaced with strncpy and memcpy

2003-09-05  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  'all' target is above 'samples' one

2003-09-04  Aleksey Cheusov  <vle at gmx.net}

  * dictP.h:
  added: missing declaration of strlcat

  * configure.in, Makefile.in:
  removed: DICT{,ZIP,FMT,D}_LDFLAGS configure variables
  avoided: use of :: in makefile
  others changes

2003-09-01  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_judy.c:
  Judy plugin supports the following options
  (dictd(8): Plugin Specification, data section):

    disable_strat=exact
    disable_strat=prefix
    ...
    disable_strat=word

    This disables particular strategies.

  * Makefile.in, deps:
  fixed: missing -fPIC

2003-08-31  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_judy.c:
  judy-based plugin:
    additional checks for 'utf-8' and 'allchars' flags
      in plugin config and databases
    double-quotes are removed from the database file names

2003-08-28  Bob Hilliard  <hilliard at debian.org}

  * clientparse.y, dict.1, dictd.8:
  clientparse.y will accept "pager' as the pager
  dict.1 mentions that --enable-dictorg is disabled by default
  dictd.8 clarifies that dictd will fail to start in "C" locale if an
  8-bit or utf-8 dictionary is listed in dictd.conf,
  .

2003-08-27  Aleksey Cheusov  <vle at gmx.net}

  * dictvd:
  initial version of dictvd

  * dictdplugin_judy.c:
  judy-based plugin uses default database directory

  * daemon.c, dictd.c:
  fixed: missing dictdb_free call
  patch by Michael Bunk <bunk at imn.htwk-leipzig.de} fixing:
         a typo giving the incomprehensible failure message,
         a typo resulting in 'dict --server-info' showing
           same compressed/uncompressed database sizes
         a bug that prevented all authentication to succeed

  * configure.in, strlcat.c:
  strlcat

  * config.h.in:
  config.h.in has been removed from CVS repository

  * dictdplugin.h, plugin.c:
  a default directory for databases
      is passed to plugins (DICT_PLUGIN_INITDATA_DEFDBDIR)

2003-08-18  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  'make cvsclean' and 'make dist' removes the temporary directory autom4te.cache

  * dictd.c:
  A multilined short name of the database is trancated.

2003-08-11  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_judy.c, heap.c, heap.h:
  code clean-ups
  fixed: 'word' strategy

  * Makefile.in, dictdplugin_judy.c, heap.c, heap.h:
  all malloc/free calls in Judy plugin have been replaced to
      calls of internal heap. Sometimes it works faster.
      This feature is #ifdef'ed

2003-08-11  faith  <faith at dict.org}

  * README: Update instructions on how to join mailing lists

2003-08-10  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_exit.c:
  fixed: compiler warning message

  * Makefile.in, dictdplugin_judy.c:
  Judy-based plugin again

  * Makefile.in, dictdplugin_judy.c:
  memory leaks in Judy-based plugin fixed

2003-08-08  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_judy.c:
  buffer overflow in Judy-based plugin fixed

  * dictdplugin_judy.c:
  transposition section of 'lev' strategy doesn't produce
     the same word twice (apple, P<->P)
  added: 'word' strategy to Judy-based plugin

  * dictdplugin_judy.c:
  added: 'lev' strategy to Judy-based plugin

  * index.c:
  fixed: 'Substitutions' section inside 'dict_search_levenshtein' function
      produces a lot of equal words

  * dictdplugin_judy.c:
  added: 'substring' strategy to Judy-based plugin

  * dictdplugin_judy.c:
  added: 're' and 'regexp' strategies to Judy-based plugin

  * str.c, str.h, Makefile.in, dictd.c, dictdplugin_judy.c, dictfmt.c, index.c:
  code clean-ups. Common string-related functions have been moved to str.c

  * dictdplugin_judy.c:
  added: suffix, prefix and soundex strategies to Judy-based plugin

  * index.c:
  fixed: 'suffix' strategy doesn't ignore characters other than
     alphanumeric and spaces. Affected versions: 1.9.1-1.9.10

  * libmaa/maa.h, libmaa/text.c:
  txt_soundex2 - reenterable version of txt_soundex

  * defs.h, plugin.c:
  one dictdb_free call for one call of dictdb_search

2003-08-07  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, dictdplugin_judy.c, libmaa/maaP.h, libmaa/strlcpy.c:
  added: initial version of Judy-based plugin

  * dictdplugin_popen.cpp:
  fixed: gcc-3.3 warning message

2003-08-06  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, config.h.in, configure.in, dictP.h, dictfmt.c, dictzip.c, index.c, libmaa/config.h.in, libmaa/configure.in, libmaa/maaP.h, libmaa/source.c, libmaa/string.c, libmaa/strlcpy.c, parse.c, plugin.c, strategy.c, strlcpy.c:
  'strncpy' function is replaced with 'strlcpy' in both dict* and libmaa

  * dictdplugin_popen.cpp: *** empty log message ***

  * plugin.c:
  code clean-ups
  NULL/-1 is passed to plugin as DICT_PLUGIN_INITDATA_DICT

  * dictd.c:
  logging clean-ups
  fixed: dictd doesn't call plugin's dictdb_free function
      if --test-nooutput is applied (only commands for debugging are affected)

2003-08-01  Aleksey Cheusov  <vle at gmx.net}

  * plugin.c:
  more informative -dinit loggin

  * dictd.8:
  Documentation update

  * dictfmt.c:
  code clean-ups
  fixed: --without-headword

2003-07-22  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to-date

  * Makefile.in, configure.in, libmaa/configure.in:
  Local libmaa is always used. This will be removed later.
  DICTD version --> 1.9.10
  LIBMAA version --> 0.96

2003-07-21  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c, dictd.8, dictd.c:
  'filter' option is implemented. Thanks to
      Michael Bunk <bunk at imn.htwk-leipzig.de} for the patch.

2003-07-16  Aleksey Cheusov  <vle at gmx.net}

  * INSTALL, dictd.8:
  Documentation update

2003-07-15  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  hide e-mails from ChangeLog

  * index.c:
  fixed: 'lev' strategy ('pple' query doesn't match 'apple' word)
      Affected versions: 1.4.9 - 1.9.9

  * index.c:
  insignificant speed-up of 'lev' strategy

2003-07-10  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in, configure.in:
  DICT_LDFLAGS, DICTD_LDFLAGS, DICTZIP_LDFLAGS and DICTFMT_LDFLAGS
      variables can be used while configure for specifying
      specific LDFLAGS for a particular executable.

      If you want to build dictd with TRE regex engine, for example, run
      DICTD_LDFLAGS='-L/usr/local/lib -ltre' CPPFLAGS='-I/usr/local/include' \
       ./configure

2003-07-09  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  fix

2003-07-07  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in: *** empty log message ***

  * Makefile.in, configure.in, dict.c, dictd.c, include_regex.h.in, index.c, parse.c, parse.h:
  parse.{c,h} is a part of dictd.
  fixed: AC_MSG_ERROR calls
  By default system-wide regex engine is used is found.
      You can also use your favourite regex engine by setting
      LDFLAGS and/or CPPFLAGS variables and optionally
      ./configure --with-regex-include=FILE.
      In order to build dictd with local regex enbgine,
      run ./configure --with-local-regex.
  upgrade to autoconf 2.53
  fixed: incorrect detection of external libmaa (libmaa_init requires arguments)

  * libmaa/Makefile.in, libmaa/maa.h, libmaa/parse.c:
  parse.c has been removed from libmaa library. This is because it declares
      'extern' symbols not defined in the library.
  added: 'make uninstall'

  * search_man:
  'search_man' example outputs plain text

  * index.c:
  dict_match function

  * config.h.in:
  upgrade to autoconf 2.53

  * index.c:
  fixed: RE and REGEXP strategies
      (^apple|orange and ^apple\|orange doesn't match a word 'orange')

  * libmaa/config.h.in:
  upgrade to autoconf 2.53

  * libmaa/configure.in:
  fixed: libmaa/configure --enable-shared
  upgrade to autoconf 2.53

2003-06-30  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  System functions wcXXX and mbXXX are used if present.

2003-06-23  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  fixed: incorrect spaces trimming.
      Thanks to Kuang-che Wu <kcwu at kcwu.homeip.net} for the bug report

2003-06-10  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c, dictfmt.1:
  added: -t option for 'dictfmt'
  'dictfmt' documentation update

  * dictd.8:
  a few fixes

  * dict.c, configure.in, Makefile.in:
  By default the predefined DICT servers dict.org and alt0.dict.org
      are disabled. If you want to use them, run
      ./configure --enable-dictorg

  * dictfmt.c:
  'dictfmt' doesn't append an empty line to definitions

  * dictfmt.c:
  00-database-{info,short,url} are processed in the same
      way as 00database{info,short,url}

2003-05-30  Bob Hilliard  <hilliard at debian.org}

  * dictd.8: Added mention ot SIGHUP causing dictd to re-read the configuration
  file, and removed BUG note saying this can't be done.

2003-05-23  Aleksey Cheusov  <vle at gmx.net}

  * dictd.8, dictfmt.1, dictfmt.c, dictunformat:
  added: dictfmt --without-info
  'dictfmt' and 'dictunformat' works better with each other. In particular
      'dictunformat' outputs 00-database-{url,short,info} headwords
      and 'dictfmt' copy 00-database-{url,short}
      headwords to .dict file if -u and -s options
      are not applied respectively.
      For 00-database-info headword see --without-info option.
  'dictfmt' documentation update

2003-04-30  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  fixed: some problems with 'make install'.
      Thanks to Kurt Wall <kwall at kurtwerks.com} for remarks

2003-04-14  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to-date

  * INSTALL:
  a few words about cygwin

  * configure.in:
  version ==> 1.9.9

  * Makefile.in: better cygwin support

  * libmaa/config.h.in, config.h.in: *** empty log message ***

  * configure.in, Makefile.in:
  better cygwin support

  * dictd.c:
  fixed: warning message produced by gcc under cygwin

  * daemon.c:
  file descriptors are explicitly initialized

2003-04-10  Aleksey Cheusov  <vle at gmx.net}

  * configure.in, defs.h, dictP.h, dictd.c, plugin.c, plugin.h, Makefile.in, config.h.in:
  'libdl' is used instead of 'libltdl' on platforms where it is available
  dictP.h cleaups

2003-04-09  Aleksey Cheusov  <vle at gmx.net}

  * dict.c:
  nothing

  * dict.c, snprintf.c, vsnprintf.c:
  err_fatal(..."Buffer too small\n" ); have been moved to
      snprintf.c and vsnprintf.c
  all sprintf() in the dict.c have been replaced with snprintf()

  * dictP.h, config.h.in, configure.in:
  dictP.h and configure.in clean-ups
      Thanks to Kimura Fuyuki <fuyuki at hadaly.org} for remarks

2003-04-09  Bob Hilliard  <hilliard at debian.org}

  * dict.c: Patched to prevent segfault/buffer overrun on excessively long
  dict command lines
  .
  .

2003-04-07  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  fixed: 'dictd' can not be configured with ./configure --with-local-zlib

  * index.h, dictd.c, index.c, dictd.8:
  added: dictd --fast-start (implied by --inetd) improves dictd's performance
      if it is run from inetd or on platforms without copy-on-write (CYGWIN).

  * dictd.8:
  documentation update

  * dictd.h, dictd.c, daemon.c:
  SHOW SERVER command doesn't show uptime/forks statistics,
      if the dictd is run from inetd.

  * index.c, dictd.h, dictd.c, dictd.8, daemon.c:
  added: dictd inetd support (dictd --inetd)
      Thanks to Joey Hess <joeyh at debian.org}
      and Robert D. Hilliard <hilliard at debian.org} for the patch.

2003-03-27  Aleksey Cheusov  <vle at gmx.net}

  * dictP.h:
  fixed: compilation error

2003-03-26  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to-date

  * configure.in:
  version == 1.9.8

2003-03-24  Aleksey Cheusov  <vle at gmx.net}

  * data.c:
  fixed: incorrect dzip format detection
  fixed: possible crash while reading too long COMMENT or FNAME fields of
      the dzip'ed file

2003-03-19  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/maaP.h, strategy.c, strategy.h, vsnprintf.c, wcrtomb.c, wctomb.c, index.c, index.h, mbrlen.c, mbrtowc.c, mbstowcs.c, mbtowc.c, plugin.c, plugin.h, snprintf.c, dictdplugin.h, dictfmt.c, dictzip.c, dictd.h, dictd.c, dictP.h, defs.h, data.h, data.c, config.h.in, configure.in, daemon.c, Makefile.in:
  Functions related to plugin have moved to plugin.c.
  Several declarations have been moved to defs.h, index.h, data.h, plugin.h
      It makes sources easier to understand (at least for me)
  UTF-8 support is optional. It is disabled on platforms which don't
      support 'iswalnum', 'iswspace' and 'towlower' functions.
      As a result 'dictd' can be compiled on CYGWIN.
  fixed: 'dictdb_free' function is not called

2003-03-09  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog: ChangeLog is up-to-date

  * dictd.c: nothing serious

  * index.c, dictd.c:
  function related to plugin are #ifdef'ed
  added: additional sanity check for disabling database_plugin keyword
      if dictd is compiled without plugin support

  * ChangeLog:
  ChangeLog is up-to-date

  * configure.in:
  version ==> 1.9.7

2003-03-04  Aleksey Cheusov  <vle at gmx.net}

  * data.c:
  fixed: error message

2003-03-03  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  fixed: bug in 'make samples'. It requires installed 'dictfmt'.

  * Makefile.in:
  'make dist' makes distribution tarball by CVS tag

  * dictd.c, dictd.8:
  Documentation update for 'dictd --add-strategy'

  * strategy.h, strategy.c, index.c, dictd.c, dictd.h, daemon.c, Makefile.in:
  All functions related to strategies have been moved to strategy.{h,c}
  added: '--add-strategy' option for 'dictd' which allows
      to implement (with a help of plugins)
      new strategies not available in 'dictd'.
      For example, 'revert' strategy may be implemented.
      By using '--with-strategy' and '--add-strategy' options you
      can create DICT server with the set of strategies you need.

  * dictdplugin_popen.cpp:
  fixed: initializing the array with zeros

2003-03-02  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c, dictd.c, dictd.h:
  fixed: DEFINE and MATCH commands return '0 definitions found' but the
      550 exit code, if the invalid database name is specified.

  * dictd.8, servscan.l:
  'string' token in a configuration file supports \", \\, \n, \<NL>
      escape sequences.
      \<NL> (multilined strings) may be useful for specifying plugin data
      or an information about database.

  * index.c:
  critical fix: dictd may crash on BMH search
      (substring, suffix and word strategies) because
      it accesses memory outside mmap'ed region.

      Affected versions: 1.4.9-1.9.5 (All?)

  * ChangeLog: ChangeLog is up-to-date

  * configure.in:
  version == 1.9.6

  * index.c:
  critical fix: dictd may crash on BMH search
      (substring, suffix and word strategies) because it accesses memory
      outside mmap'ed region.

2003-02-28  Aleksey Cheusov  <vle at gmx.net}

  * index.c, dictdplugin_popen.cpp:
  fixed: dictWord structures are not initialized with zeros

  * index.c: removed: something strange

2003-02-23  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c, dictd.c, dictd.h:
  fixed: if the 'name' keyword is used in database section, and
      it doesn't begin with '@', dictd may crash on SIGHUP.

      Affected versions: 1.9.1-1.9.4.

  The upper visible virtual dictionary is returned by DEFINE and MATCH
      commands if the actual definition/match is found in invisible dictionary.

  * ChangeLog:
  ChangeLog is up to date

  * configure.in:
  version ==> 1.9.5

  * dictd.c:
  fixed: if the 'name' keyword is used in database section, and
      it doesn't begin with '@', dictd may crash on SIGHUP.

      Affected versions: 1.9.1-1.9.4.

  * data.c, dictd.8, dictd.c, index.c, daemon.c:
  The only required keyword for the virtual database is database_list.
  The '@' symbol in 'name' and 'info' keywords is treated especially.

  * dictd.c:
  plugin specified in the config file also uses default plugin directory

  * daemon.c:
  'info' keyword understand prefix '@' too

  * dictd.c, index.c:
  fixed: short name is initialized before plugin initializing

  * dictd.h, index.c:
  code cleanups
  fixed: bug in passing database names to the plugin

  * configure.in:
  fixed: ./configure --with-nec-socks5

  * daemon.c, dictd.8, dictd.c, dictd.h, dictdplugin.h, index.c, servparse.y, servscan.l:
  added: ability to specify plugin in the configuration file
  documentation update
  added: additional sanity checks

  * daemon.c:
  dict_search_databases function has been simplified

  * servscan.l, dictd.8, dictd.c, dictd.h, servparse.y, daemon.c:
  added: ability to specify virtual dictionary in the configuration file.
      'database_virtual', 'database_list' keywords are added.
  documentation update
  added: 'info' keyword for specifying information about the database
      in the config file. @ prefix is supported.
  added: additional sanity checks

  * dictd.h, servparse.y, daemon.c, dictd.c:
  explicit flag is used for database_exit but the NULL indexFilename

2003-02-21  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c:
  debugging command has been removed

  * daemon.c:
  SHOW SERVER command word correctly with invisible databases

  * data.c, dictd.c, dictd.h, servparse.y, servscan.l, daemon.c:
  The keyword 'invisible' may be used inside 'database' section of
      the dictd configuration file.
      This means that the specified dictionary will not be shown to the clients.
      Currently DEFINE and MATCH command returns '*' as a dictionary name.
      Later the name of topmost virtual dictionary will be returned.
      There is no sense to make dictionary invisible if it is included to
      '*' dictionary (i.e. not preceded by dictionary_exit command)

  * dictfmt_plugin:
  fixed: usage message
  'dictfmt_plugin' fails if plugin filename is not specified

2003-02-20  Aleksey Cheusov  <vle at gmx.net}

  * servscan.l:
  fixed: dictd.8 says that 'string' can be continued between lines
       but it can not. Now backslash at the end of line (between two " symbols)
       means new line character.

  * configure.in:
  added: ./configure --with-nec-socks5 for those who are behind socks server
       This causes linking with socks5 library both 'dictd' and 'dict'.

2003-02-15  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to-date

  * configure.in:
  version ==> 1.9.4

  * dictd.8:
  fixed: misprint in the documentation

2003-02-10  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  AC_REPLACE_FUNCS(towlower) -> AC_CHECK_FUNCS

  * dictfmt_virtual.1, index.c, dictd.h, dictd.c, config.h.in:
  added: 'dictfmt' adds 00-database-8bit entry to the 8-bit dictionaries.
         'dictd' uses this entry (and 00-database-utf8)
         and fails if "C" locale is specified
         and 8-bit or utf-8 dictionaries are encountered.

         Using "C" locale for 8-bit and utf-8 dictionaries is one of
         the most common error made by dictd users.

  * dictfmt_virtual:
  nothing serious

  * dictfmt.c, dictunformat:
  'dictfmt' fails if --locale="C" (the default) is specified and 8-bit
      head word is encountered.

2003-02-07  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt_index2word:
  'dictfmt_index2word' failes if it is run with the locale "C" and
      index file contains 8-bit head words.

  * dictfmt_index2suffix:
  'dictfmt_index2suffix' failes if it is run with the locale "C" and
      index file contains 8-bit head words.

  * dictfmt.c:
  'dictfmt' run with "C" locale cannot build dictionary containing 8-bit words

  * dictfmt_index2suffix, dictfmt_index2word:
  fixed: problems with filenames containing spaces

  * Makefile.in:
  new man pages are installed/uninstalled

  * configure.in, dictfmt_index2suffix.1, dictfmt_index2word.1, dictfmt_virtual.1, dictunformat.1:
  documentation update

  * Makefile.in:
  fixed: bug in 'samples' target

2003-02-06  Bob Hilliard  <hilliard at debian.org}

  * dictunformat.1, dictfmt_index2word.1, dictfmt_virtual.1, dictfmt_index2suffix.1:
  Really added dictfmt_virtual.1, dictunformat.1, dictfmt_index2word.1,
  and dictfmt_index2suffix

2003-02-02  Bob Hilliard  <hilliard at debian.org}

  * dict.c, dictd.8:
  Fixed dict.c to accept --serverinfo option, minor changes to dictd.8
  Added dictfmt_index2suffix.1, dictfmt_index2word.1, dictfmt_virtual.1,
  and dictunformat.1

2003-01-21  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt_index2word:
  awk script inside conforms to posix

2003-01-19  Aleksey Cheusov  <vle at gmx.net}

  * vsnprintf.c, snprintf.c, dictfmt.c, dictzip.c, dictd.c, daemon.c, configure.in, config.h.in:
  'dictd', 'dictfmt' and 'dictzip' use snprintf and vsnprintf functions
      instead of sprintf and vsprintf on platforms where they are available.

  * dictd.c:
  added: --test-nooutput and --test-idle debugging options to 'dictd'
         They allow to test search speed:
           time_of(dictd --test-nooutput) - time_of (dictd --test-idle)
  fixed: bug with a debugging option --test-match
         Actually it made a DEFINE search

  * dictfmt_virtual, dictfmt.c, dictfmt_plugin:
  added: --silent, --quiet, -q options to 'dictfmt'

  * dictd.h, index.c:
  This significantly speeds up plugin-based search

  * ChangeLog:
  ChangeLog conforms dictd-1.9.3

  * index.c:
  more informative error message

  * dictdplugin_popen.cpp: *** empty log message ***

  * dictfmt_plugin:
  'dictfmt_plugin' doesn't add header and url to the .dict file

  * dictd.c:
  added: additional check for empty database list

2003-01-17  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  version = 1.9.3

  * dictd.c:
  fixed: dictd may crash when access section of
         the configuration file is empty

2003-01-16  Bob Hilliard  <hilliard at debian.org}

  * dictfmt_virtual, servparse.y:
  Patched servparse.y to make dict -D give a nicer message for
  database_exit.
  Patched dictfmt_virtual-patch to prevent failing when optional
  argument info_files is omitted

2003-01-16  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to-date

2003-01-15  Aleksey Cheusov  <vle at gmx.net}

  * configure.in:
  version=1.9.2

  * dictunformat:
  'dictunformat' can handle databases containing more than one headwords
      for a single definition
  added: --headword-separator argument to 'dictunformat' utility

2003-01-14  Aleksey Cheusov  <vle at gmx.net}

  * wcrtomb.c:
  added: wcrtomb.c

  * utf8_ucs4.c, utf8_ucs4.h, wctomb.c, mbtowc.c, mbstowcs.c, mbrtowc.c, mbrlen.c, configure.in, Makefile.in:
  multibyte character oriented functions are implemented in mb*.c and wc*.c
    files and they are used by default instead of standard ones.
    It seems glibc-2.1.3 has broken wcrtomb.

2003-01-09  Aleksey Cheusov  <vle at gmx.net}

  * index.c, dictunformat:
  mbstate_t

  * Makefile.in:
  install/uninstall makefile's targets use DESTDIR environment variables.
         This simplifies building RPMs.

2003-01-08  Bob Hilliard  <hilliard at debian.org}

  * dictzip.c, index.c:
  Patched dictzip.c to revent segfault on excessively long command lines
  Patched index.c so dictd will startup without error if config file
  includes the /dev/null database

2003-01-03  Aleksey Cheusov  <vle at gmx.net}

  * index.c:
  mbstate_t is not used

  * data.c, dictd.c, dictfmt.c, index.c, ChangeLog, Makefile.in, config.h.in, configure.in, daemon.c:
  functions from utf8_ucs4.c have been replaced with the standard ones.
  a few changes in configure.in
  DEFINE command returns an error message (MATCH command stops the search)
    for invalid utf-8 query (This is a trick!!!)
  dictfmt is linked with libmaa
  added: the following options to dictfmt:
         --without-header
         --without-url
         --without-time

2002-12-25  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.in:
  'dictunformat' is installed and uninstalled like 'dictfmt'

  * dictunformat, index.c:
  fixed: typo
  added: dictunformat which is able to extract dictionary
         from .dict and .index files.
         This may be used to recreate database from 8-bit character sets
         to utf-8 or to another format

2002-12-17  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to-date

  * libmaa/config.sub, libmaa/configure.in, ChangeLog, configure.in, dict.c, utf8_ucs4.c:
  code cleanups
  libmaa version set to 0.95
  dictd version set 1.9.1

2002-12-15  Bob Hilliard  <hilliard at debian.org}

  * dict.c:
  Modified client_print_listed() to make dict -D and dict -S print long
  names sanely.
  .
  .

2002-12-10  Aleksey Cheusov  <vle at gmx.net}

  * dictd.h:
  fixed: problems in building 'dictd' without plugin support

  * configure.in:
  fixed: Even if you run ./configure with --disable-plugin, ltdl.h is needed

  * configure.in:
  configure.in: version number 1.8.0 ==> 1.9.0

2002-12-05  Aleksey Cheusov  <vle at gmx.net}

  * search_man:
  fixed: forgot to remove sending a debugging e-mail message

2002-12-04  Aleksey Cheusov  <vle at gmx.net}

  * example_virtual.conf:
  fixed: typo

  * ChangeLog:
  ChangeLog is up to date

  * index.c:
  Plugin version == 1 is disabled. Version == 0 is allowed only.

  * dictd.c, example_virtual.conf, index.c, servparse.y, servscan.l, daemon.c, data.c, dictd.8:
  added: 'database_exit' directive to dictd.conf.
         You can use 'virtual' dictionaries without plugin support.
         See man dictd.8 and example_virtual.conf for details.
  fixed: crash during debugging (-dsearch) output (80 chars limit)

2002-12-03  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin_popen.cpp, example_popen.conf, index.c, search_man, dictdplugin.h, dictdplugin_exit.c, INSTALL, Makefile.in, daemon.c, data.c, dictd.h, dictdplugin-config.in:
  fixed: warning messages produced by gcc
  added: example 'popen' plugin. FOR PLUGIN DEMONSTRATION ONLY.
  added: popen plugin dictdplugin_popen.cpp. See INSTALL section 5.
  added: plugins can operate with strategies.
         See DICT_PLUGIN_INITDATA_STRATEGY constant,
           dictPluginData_strategy structure from dictdplugin.h and
           dictdplugin_popen.cpp for a sample of use

  * dictd.c:
  fixed: non-critical memory leaks again

  * dictd.h, dictdplugin-config.in, dictfmt_plugin, index.c, Makefile.in, dictd.8, dictd.c:
  By default (if not full filename name specified) plugins/dictionaries will be
    searched in $datadir/$libexecdir directory. It is a compile time option.
    See man dictd.
  added: dictdplugin-config --dictdir and --plugindir options

2002-12-02  Aleksey Cheusov  <vle at gmx.net}

  * dictd.c:
  fixed: not critical memory leak

  * dictd.h, index.c: *** empty log message ***

  * dictd.8:
  documentation update

2002-11-28  Aleksey Cheusov  <vle at gmx.net}

  * INSTALL, TODO, dictd.8, dictfmt_plugin, example2.conf, example3.conf:
  documentation update

2002-11-25  Aleksey Cheusov  <vle at gmx.net}

  * servparse.y:
  servparse.y: fix by Dima Dorfman <d+dict at trit.org}

2002-11-19  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c:
  dictd can processes several conversions made by plugin.
    Example: if the plugin converts 'found' word to 'find' and 'found',
             all following dictionaries will be searched for both
             'find' and 'found'
    Example: if the plugin converts 'fruit' word to 'apple' and 'orange',
             all following dictionaries will be searched for both 'apple'
             and 'orange'

  * libmaa/text.c:
  fixed: possible crash in libmaa/text.c:txt_soundex
         My previous commit did not fix it

2002-11-18  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/text.c, utf8_ucs4.c, dictfmt.c, index.c:
  fixed: problems with 'toupper/tolower/isXXXX (-1)
  fixed: possible crash in libmaa/text.c:txt_soundex

  * dictfmt.c:
  fixed: invalid calculating the UTF-8 string length
         while formatting the dictionary

2002-11-04  Bob Hilliard  <hilliard at debian.org}

  * config.sub, config.guess:
  updated config.sub and config.guess to September 02 values
  .

2002-10-29  Aleksey Cheusov  <vle at gmx.net}

  * utf8_ucs4.c:
  fixed: utf8_ucs4.c:strlen_utf8

2002-10-28  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog, Makefile.in, configure.in, daemon.c, dictd.c, dictd.h, dictfmt_plugin, dictfmt_virtual:
  added: 'dictfmt_virtual' utility for creating virtual dictionary
  ADDED: Virtual dictionary capability for 'dictd'.
         Run 'dictfmt-virtual --help' for a help

  * configure.in, dictd.c, ChangeLog:
  SIGHUP causes 'dictd' to reload configuration file

2002-10-18  Bob Hilliard  <hilliard at debian.org}

  * dictfmt.1, dictfmt.c, dictd.8:
  Updated dictd.8 to include options added in 1.8.0.
  Updated dictfmt.c to correct previous errors and omissions and include
  options added in 1.8.0.
  Patched dictfmt.c to correct help message for -c5 and to fix the bug
  that caused the last headword read in to be duplicated in the index.

2002-10-17  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c, dictd.c, dictd.h:
  removed: --define-strategy option for 'dictd'
  renamed: --match-strategy ==> --default-strategy
  added:   --disable-strategy option for 'dictd'

2002-10-16  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  fixed: typo

2002-10-14  Aleksey Cheusov  <vle at gmx.net}

  * index.c: *** empty log message ***

  * servparse.y, servscan.l, index.c, dictfmt_index2suffix, dictfmt_index2word, dictd.h, dictd.c, daemon.c, Makefile.in:
  fixed: missing dependancy in Makefile.in
  added: fast implementation (binary search) of the WORD strategy search.
         This requires additional index file created by dictfmt_index2word
  added: --test-match option to dictd executable
  fixed: problems with suffix strategy using additional index file

  * daemon.c, dictdplugin.h, index.c:
  ADDED: new search strategy 'word'
  fixed: uninitialized variable charcount from index.c:dict_table_init

2002-10-11  Aleksey Cheusov  <vle at gmx.net}

  * daemon.c, dictd.c, ChangeLog:
  added:   --match-strategy argument to dictd.
           It sets the default strategy for 'match' queries
  added:   --define-strategy argument to dictd.
           It sets the default strategy for 'define' queries
  update ChangeLog

2002-09-27  Aleksey Cheusov  <vle at gmx.net}

  * libmaa/config.h.in, libmaa/configure.in, libmaa/error.c, ChangeLog, Makefile.in, config.h.in, configure.in, daemon.c, data.c, dictP.h, dictd.c, dictd.h, dictdplugin.c, dictdplugin.h, dictdplugin_exit.c, index.c:
  added: possibility to disable plugin support
         by running ./configure --disable-plugin
  fixed: problems with make -j. patch by
         Andrzej Dopierala <undefine at aramin.one.pl}
  fixed: problems with make ChangeLog
  added: possibility to build 'dictd' on platforms not supporting mmap()
  added: a lot of 'const' modifyers
  removed: 'goto' statement ;) from daemon.c
  added: --test-file argument to 'dictd'
         '--ftime' and '--test-file' are synonyms
  'dictd --test-file' and 'dictd --test' now search in ALL databases
         but the first one only.
  added: --test-db to 'dictd'
         It sets the database name for --test and --test-file.
  plugin function dictdb_open can return version == 1.
         In this case before each 'dictdb_search' call, 'dictdb_set'
         should be called. Not fully implemented.
  added:  DICT_PLUGIN_INITDATA_DBNAME data id for initialising plugin
         the databases names are passed to the plugins
         by the call of 'dictdb_open'
         This can be used to implement "virtual" databases such as
         "English monolingual" containing Webster, FOLDOC, WordNet etc...
  added: new plugin exit status DICT_PLUGIN_RESULT_EXIT
         which allows to stop searching.
         This is an easiest way to exclude some databases from '*' list.
         Example:
           1) Webster
           2) Wordnet
           3) ----- dictdplugin_exit.so plugin -----
           4) man pages
           5) RFC documents
           6) HOWTOs
           7) C++ functions
           8) Perl functions
         Using such database list, you will search
         only Webster and Wordnet databases
         by running 'dict apple'.
         If you want to get RFC document e.g., specify database name explicitly.
         Of course, plugin may exit with such exit status
         not only unconditionally
  added: dictdplugin_exit.so plugin
         Stops searching unconditionally.
  added: new plugin exit status DICT_PLUGIN_RESULT_PREPROCESSED
         which allows to implement a preprocessor of the requested word.
         Simple examples:
           - Converting German umlauts to UE, OE etc.
           - Converting Cyrillic YO character to YE
         After plugin converts the requested word, all following databases
         will be searched for converted one.
         In order this to work, it is necessary to create .index files
         without umlauts and Cyrillic YO characters.
         Database list example:
           1) ---- plugin converting German umlauts ------
           2) ---- plugin converting Cyrillic YO to YE ---
           3) German-English dictionary
           4) Russian-English dictionary
  fixed: bug in 'dict_search_plugin' function

2002-09-18  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  dictfmt: --headword-separator doesn't imply --without-headword

2002-09-17  Aleksey Cheusov  <vle at gmx.net}

  * dictdplugin.c, dictdplugin.h:
  constant strings definitions have been moved to dictdplugin.c

  * index.c:
  fixed: memory leak

2002-09-16  Aleksey Cheusov  <vle at gmx.net}

  * Makefile.conf, Makefile.in, config.h.in, configure.in, daemon.c, dictd.c, dictd.h, dictdplugin-config.in, dictdplugin.c, dictdplugin.h, doc/Makefile.in, index.c, libmaa/Makefile.in, libmaa/config.h.in, libmaa/configure.in, plugin.h, INSTALL:
  fixed: bug in configure.in
         ./configure --sysconfdir was completely ignored
  changed: The default "prefix" directory from /usr to /usr/local
         just like most other packages do.
  removed: --with-etcdir argument of configure script.
         Use --sysconfdir instead.
         Run "./configure --prefix /usr --sysconfdir /etc" to
             get "configure" script behaviour
         similar to older dictd "configure".
  plugin improvements/changes:
    - plugin.h renamed to dictdplugin.h
    - In order to avoid confusing
      several #defines have been renamed.
      Now all #defines have DICT_ prefix.
    - "all" Makefile target builds library libdictdplugin.a.
      Link plugins with it.
    - dictdplugin-config configuration tool. It is like gtk-config.
  Error message is returned by dictd if the request is
     not a valid UTF-8 string and remaining databases will not be checked.
  fixed: warning messages produced by autoreconf

2002-09-13  faith  <faith at dict.org}

  * ChangeLog: Update ChangeLog

2002-09-12  Aleksey Cheusov  <vle at gmx.net}

  * configure.in, daemon.c, data.c, dictd.c, dictd.h, dictfmt_plugin, dictzip.c, index.c, plugin.h, utf8_ucs4.c, utf8_ucs4.h:
  fixed: crash while debugging output (80 chars limit)
  fixed: a lot of memory leaks. All they not critical because
         they happened during server initialisation only but
         I prefer to free memory explicitly.
  added: --no-mmap argument to 'dictd'
  ADDED: plug-in capability for DICTD.
         Using it you can develop alternative database formats,
         linguistic modules such as stemming/translator, "redirectors"
         to another dictd or on-line dictionaries such as Britannica, or
         even front-end to your favourite intra-net searchers such as
         mnogosearch and ht://Dig. Almost everything you want.

         See plugin.h and dictfmt_plugin for details

2002-09-11  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog:
  ChangeLog is up-to date

2002-08-23  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  added: --without-hw parameter to 'dictfmt'

  * dictfmt.c:
  added: --headword-separator parameters to 'dictfmt'.
    allows several headwords to have the same definition.
    Example: autumn%%%fall if dictfmt is run with --headword-separator %%%

  * dictd.c, dictfmt.c:
  added: locale verification both in 'dictfmt' and 'dictd'

2002-08-22  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt.c:
  'dictfmt' now removes ending spaces for the head words

  * zlib/zlib.html, zlib/zlib.rc, zlib/zutil.c, zlib/zutil.h, zlib/zlib.3, zlib/zlib.def, zlib/zlib.h, zlib/inftrees.h, zlib/infutil.c, zlib/infutil.h, zlib/maketree.c, zlib/minigzip.c, zlib/trees.c, zlib/uncompr.c, zlib/zconf.h, zlib/FAQ, zlib/Makefile, zlib/Makefile.b32, zlib/Makefile.bor, zlib/Makefile.dj2, zlib/Makefile.in, zlib/Makefile.msc, zlib/Makefile.sas, zlib/Makefile.tc, zlib/Makefile.wat, zlib/README, zlib/README.DICT, zlib/adler32.c, zlib/algorithm.doc, zlib/compress.c, zlib/crc32.c, zlib/deflate.c, zlib/deflate.h, zlib/example.c, zlib/gzio.c, zlib/infblock.c, zlib/infblock.h, zlib/infcodes.c, zlib/infcodes.h, zlib/inffast.c, zlib/inffast.h, zlib/inflate.c, zlib/inftrees.c, zlib/ChangeLog:
  downgrade to zlib-1.1.3 + double-free() patch

2002-08-21  Aleksey Cheusov  <vle at gmx.net}

  * dict.c:
  fixed: possible crash of 'dict' client

  * dictfmt.c:
  unnecessary /*LEAVE FIRST CHARACTER IN UPPER CASE BUT DOWNCASE THE REST*/
    has been removed from dictfmt.c

  * configure.in:
  I removed local_zlib=1 line in configure.in
    With this line
    both --with[out]-local-zlib arguments supplied to 'configure' will
    be ignored and local BUGGY zlib library will always be used.
    Now external zlib library will be used by default.

2002-08-13  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog, Makefile.in:
  changed: ChangeLog

  * Makefile.in:
  added: dictfmt_index2suffix in 'install' and 'uninstall' Makefile's targets

2002-08-12  Aleksey Cheusov  <vle at gmx.net}

  * dictfmt_index2suffix, utf8_ucs4.c, Makefile.in, dict.c, dictd.8, dictfmt.1, dictfmt.c:
  added: dictfmt.1, dictfmt_index2suffix, patched version of dictfmt.c
  several changes in dictd.8
  fixed: typo in utf8_ucs4.c
  added: uninstall target in Makefile.in

  Now dictfmt is a part of dictd distribution

2002-08-05  Aleksey Cheusov  <vle at gmx.net}

  * ChangeLog: *** empty log message ***

  * Makefile.in:
  distclean - removes everything absent in tar.gz
  cvsclean  - removes everything absent in CVS repository

  * index.c:
  changed: substring search for UTF-8 dictionaries uses BMH but the RE.

  * libmaa/list.c, dictd.c, dictd.h, index.c:
  added: possibility to search using all characters
    but the alphanumeric and space only.
    00-database-allchars special entry in the index file is used.

  * dictd.h, index.c:
  changed: utf-8 search becomes faster

  * index.c:
  changed: UTF-8 "suffix" search uses BMH but the RE.

  * dictd.c, dictd.h, index.c, servparse.y, servscan.l, utf8_ucs4.c, utf8_ucs4.h:
  added: more efficient (probably) suffix search algorithm is implemented.
   Uses additional index file consisting of anagrams.

  * index.c:
  fixed: bug causing a lot of unnecessary comparisons

  * Makefile.in:
  changed: distclean target in Makefile.in

  * index.c:
  fixed: bug in debugging output

  * libmaa/Makefile.in, libmaa/log.c, libmaa/maa.h, Makefile.in, daemon.c, data.c, dictd.c, dictd.h, index.c, utf8_ucs4.c, utf8_ucs4.h:
  added: utf-8 functions in utf8_ucs4.c
  changed: 'distclean' target of Makefile.in
  added: argument '--test-strategy'
    it can be used for debugging.
  fixed: crash at fclose(NULL)
  fixed: crash of dictd with --ftest
  fixed: "8bit" bug in compare:index.c
  changed: comparions count in the debugging mode is calculated
    without optStart array initialization
  fixed: "8bit" bug in suffix/substring searching strategy
  changed: PRINTF and FPRINTF macroses.
    old variants cause problems with the nested if/else
  added: UTF-8 support

2002-08-02  faith  <faith at dict.org}

  * libmaa/Makefile.in, libmaa/arg.c, libmaa/argtest.c, libmaa/base26.c, libmaa/base64.c, libmaa/basetest.c, libmaa/bit.c, libmaa/bittest.c, libmaa/configure.in, libmaa/debug.c, libmaa/debugtest.c, libmaa/decl.h, libmaa/error.c, libmaa/flags.c, libmaa/hash.c, libmaa/hashtest.c, libmaa/list.c, libmaa/listtest.c, libmaa/log.c, libmaa/maa.c, libmaa/maa.h, libmaa/maaP.h, libmaa/memory.c, libmaa/memtest.c, libmaa/mkrnd.c, libmaa/parse-concrete.c, libmaa/parse.c, libmaa/pr.c, libmaa/prime.c, libmaa/primetest.c, libmaa/prtest.c, libmaa/rnd.c, libmaa/set.c, libmaa/settest.c, libmaa/sl.c, libmaa/sltest.c, libmaa/source.c, libmaa/stack.c, libmaa/strdup.c, libmaa/string.c, libmaa/stringtest.c, libmaa/text.c, libmaa/timer.c, libmaa/xmalloc.c, servscan.l, zlib/ChangeLog, zlib/adler32.c, zlib/compress.c, zlib/crc32.c, zlib/deflate.c, zlib/deflate.h, zlib/example.c, zlib/gzio.c, zlib/minigzip.c, zlib/trees.c, zlib/uncompr.c, zlib/zconf.h, zlib/zutil.c, zlib/zutil.h, ChangeLog, Makefile.in, clientparse.y, configure.in, daemon.c, data.c, dict.c, dictd.c, dictzip.c, index.c, net.c:
  Update with 1.7.1 release

2002-05-03  faith  <faith at dict.org}

  * regex/COPYRIGHT, regex/Makefile, regex/README, regex/README.DICT, regex/WHATSNEW, regex/engine.c, regex/regcomp.c, regex/regerror.c, regex/regex.3, regex/regex.7, regex/regex2.h, regex/regexec.c, regex/tests, regex/utils.h, zlib/ChangeLog, zlib/FAQ, zlib/INDEX, zlib/Make_vms.com, zlib/Makefile, zlib/Makefile.in, zlib/Makefile.riscos, zlib/README, zlib/README.DICT, zlib/adler32.c, zlib/algorithm.txt, zlib/compress.c, zlib/configure, zlib/crc32.c, zlib/deflate.c, zlib/deflate.h, zlib/example.c, zlib/gzio.c, zlib/infblock.c, zlib/infblock.h, zlib/infcodes.c, zlib/infcodes.h, zlib/inffast.c, zlib/inffast.h, zlib/inffixed.h, zlib/inflate.c, zlib/inftrees.c, zlib/inftrees.h, zlib/infutil.c, zlib/infutil.h, zlib/maketree.c, zlib/minigzip.c, zlib/trees.c, zlib/trees.h, zlib/uncompr.c, zlib/zconf.h, zlib/zlib.3, zlib/zlib.h, zlib/zlib.html, zlib/zutil.c, zlib/zutil.h, libmaa/debugtest.c, libmaa/decl.h, libmaa/error.c, libmaa/flags.c, libmaa/hash.c, libmaa/hashtest.c, libmaa/list.c, libmaa/listtest.c, libmaa/log.c, libmaa/maa.c, libmaa/maa.h, libmaa/maaP.h, libmaa/memory.c, libmaa/memtest.c, libmaa/mkrnd.c, libmaa/parse-concrete.c, libmaa/parse.c, libmaa/pr.c, libmaa/prime.c, libmaa/primetest.c, libmaa/prtest.c, libmaa/rnd.c, libmaa/set.c, libmaa/settest.c, libmaa/sl.c, libmaa/sltest.c, libmaa/source.c, libmaa/stack.c, libmaa/strdup.c, libmaa/string.c, libmaa/stringtest.c, libmaa/text.c, libmaa/timer.c, libmaa/version.c, libmaa/xmalloc.c, INSTALL, Makefile.in, clientparse.y, config.h.in, configure.in, daemon.c, data.c, dict.1, dict.c, dictd.8, dictd.c, dictd.h, dictzip.c, index.c, libmaa/Makefile.in, libmaa/acconfig.h, libmaa/arg.c, libmaa/argtest.c, libmaa/base26.c, libmaa/base64.c, libmaa/basetest.c, libmaa/bit.c, libmaa/bittest.c, libmaa/config.h.in, libmaa/configure.in, libmaa/debug.c, net.c, servscan.l, ChangeLog:
  Sync sourceforge.net repository with dictd-1.7.0 release

2001-01-12  faith  <faith at dict.org}

  * Makefile.in: Bump version

2001-01-01  Bob Hilliard  <hilliard at debian.org}

  * dict.c:
  Aaaargh!  Previous update broke pager in dict.  This is fixed now.

2000-12-31  faith  <faith at dict.org}

  * Makefile.in, index.c: Fix const warning
  Bump version number

  * libmaa/decl.h, libmaa/text.c, decl.h, index.c:
  Made minor changes for Solaris 5.7 compilation

2000-12-27  Bob Hilliard  <hilliard at debian.org}

  * dict.1, dict.c, dictd.8:
       dict.c - added argument to help message for -s; made all help messages go
  to stdout and error messages to stderr; disabled --html option
       dict.1 - clarified explanation of -s option (not really
  necessary, IMHO, but a bug was filed), mentioned that --html option is
  disabled.
       dictd.8 - corrected typo

2000-12-22  faith  <faith at dict.org}

  * Makefile.in, codes.h, daemon.c, data.c, decl.h, dict.c, dict.h, dictP.h, dictzip.c, dictzip.h, index.c, net.c, net.h:
  Fix Debian bug #77685 (dict crashes with "-s regexp sch*".
  Update email addresses.
  Bump version number.

  * daemon.c, dict.c: Fix memory leak and remove limitation on matches.

2000-11-09  faith  <faith at dict.org}

  * dict.c: Limit number of matches to print
  Because of the use of a string pool by the argification functions,
  printing too many matches can use far too much memory -- better to
  fail until we move to another string management algorithm

  * dict.c: Limit number of definitions returned to 100

2000-11-08  faith  <faith at dict.org}

  * Makefile.in, dictd.c, dictd.h, servscan.l:
  Apply patches from Bob Hilliard that are in the Debian version.
  The grp.h file may not be portable and should be tested.
  Bump version number to avoid confusion.

2000-05-29  faith  <faith at dict.org}

  * daemon.c: Fix MATCH

  * Makefile.in: Bump version

2000-01-27  faith  <faith at dict.org}

  * Makefile.in: Man page directory fix from weed@DeepThought

1999-12-23  Julian Squires  <tek at wiw.org}

  * libmaa/maaP.h: Added OpenBSD to list of BSDs to allow smooth compilation.

1999-12-23  faith  <faith at dict.org}

  * libmaa/bit.c, libmaa/hash.c, libmaa/hashtest.c, libmaa/listtest.c, libmaa/settest.c:
  Update for 64-bit machines

1999-12-22  faith  <faith at dict.org}

  * libmaa/decl.h: Update for Linux/Sparc

  * Makefile.in: -N no longer needed for cvs export

  * configure.in: Fix typo

  * Makefile.in, configure.in: Final fixes for 1.5.0 release.

  * INSTALL, Makefile.in: Update INSTALL for Cygwin
  Update dist target for new CVS repository

  * Makefile.in, configure.in, dict.c, dictP.h:
  Imcomplete changes for IRIX and other systems where --with-cc is needed

  * Makefile.in, configure.in, daemon.c, dictd.c, dictd.h, libmaa/log.c:
  Changes for OSF (DEC Unix) for Alpha

  * Makefile.in: Use mandir (from Tage Stabell-Kulo)
  Create man8 if it does not exist

  * net.c: Changes from Jeff Blaine and Stephen L Moshier

  * libmaa/log.c:
  Changes from Stephen L Moshier to support Cygnus B20 under Windows 98

  * INITSCRIPT, INSTALL, README: Added credit to Jeff Blaine

  * INITSCRIPT, INSTALL, README: New documentation from Jeff Blaine

  * Makefile.in, clientscan.l, configure.in, decl.h, dict.1, dict.c, dictd.c, libmaa/hash.c, servscan.l:
  Patches from Bob and Kirk Hilliard:
  Fix error in code that causes logging to fail
  Fix stdout initialization in dict
  Fix defs for linux on sparc
  Fix hash type (for alpha?)
  Fix parse error message misalignment
  Fix some annoying compilation warnings
  Fix syntax in dictd configuration file
  Add include keyword to dictd configuration file syntax
  Add switch to specify pager (or lack thereof)
  Add documentation for pager option
  Drop root as soon as daemon starts

  Also, fix --prefix on configuration

1998-07-06  faith  <faith at dict.org}

  * dictzip.1, index.c, data.c, dict.1, dictd.8, dictd.c:
  Removed Linux from man pages
  Added more UNZIP debugging code

1998-07-05  faith  <faith at dict.org}

  * libmaa/configure.in:
  Fixed Makefile.in and configure.in syntax per email from Ian T Zimmerman

  * libmaa/timer.c, libmaa/configure.in, libmaa/Makefile.in, doc/dicf.ms, doc/Makefile.in, Makefile.in, configure.in:
  Fixed timer wrap-around between 49 and 50 days
  Fixed Makefile.in and configure.in syntax per email from Ian T Zimmerman

1998-03-01  faith  <faith at dict.org}

  * dictzip.c, Makefile.in, daemon.c: Fixed typo in daemon.c
  Removed unused variables from dictzip

  * daemon.c, dictzip.c, Makefile.in: Fixed . problem
  Fixed dictzip to conform to man page

1998-02-28  faith  <faith at dict.org}

  * dictd.c, Makefile.in: Update for Linux accept(2)

1998-02-22  faith  <faith at dict.org}

  * ANNOUNCE: Update ANNOUNCE

  * dictd.conf: Another (more complete) example dictd.conf file

  * README, configure.in: Minor changes
  Always use local libmaa, because of recent bug fixes

  * libmaa/log.c, libmaa/maa.h: Minimize warnings with Linux glibc

  * libmaa/source.c: Fixed NULL pointer dereference in err_ routines

  * Makefile.in, libmaa/maaP.h: Port to BSDI

1998-02-20  faith  <faith at dict.org}

  * index.c, daemon.c, Makefile.in: Fixed problem with duplicates

1998-02-16  faith  <faith at dict.org}

  * dictd.c, daemon.c, Makefile.in: Fixed startup bug and rate computation

  * dictd.c, dict.c: Fix race condition when counting children

  * index.c, dictd.h, dictd.c, dictd.8, dict.h, dict.c, dict.1, TODO, Makefile.in, README, ANNOUNCE:
  Added more features

1998-01-19  faith  <faith at dict.org}

  * daemon.c: Updated buffer overflow behavior

  * dictd.c: Removed code for PERSISTENT servers

  * net.c, dictd.h, dictd.c, dict.h, dict.c, daemon.c, clientscan.l, clientparse.y, Makefile.in:
  Added paging feature

1998-01-16  faith  <faith at dict.org}

  * decl.h, net.c, libmaa/log.c, libmaa/maaP.h, libmaa/decl.h: Changes for HPUX

  * dictd.c: Change for Solaris

  * decl.h, dictd.c, configure.in: Changes for Solaris (and some DG/UX)

1998-01-05  faith  <faith at dict.org}

  * libmaa/maaP.h, libmaa/log.c: Port to DG/UX

  * dict.c, Makefile.in: Make client deal with partially implemented servers.

  * libmaa/maaP.h: Port to FreeBSD

1998-01-04  faith  <faith at dict.org}

  * ANNOUNCE: Add draft of announcement

  * Makefile.in: Use RFC2229 instead of building from .ms

  * doc/rfc2229.txt: Add official RFC2229

  * doc/Makefile.in, net.c, dictd.c, dict.c, README, dict.1, Makefile.in:
  Minor updates
  Try all IPs for round-robin DNS entries

1997-11-30  faith  <faith at dict.org}

  * libmaa/sl.c: Update for dissertation benchmarks

1997-11-08  faith  <faith at dict.org}

  * libmaa/list.c, libmaa/maa.h: This version is buggy, do not check out

1997-09-25  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/log.c, libmaa/decl.h:
  Updates for DSL Example under Solaris

1997-09-19  faith  <faith at dict.org}

  * libmaa/maaP.h: Fix Solaris predefined macros

1997-09-14  faith  <faith at dict.org}

  * libmaa/set.c, libmaa/maa.h: Reimplemented algorithm based on write-up in
  dissertation.  Now using the same algorithm in both places.

1997-09-12  faith  <faith at dict.org}

  * libmaa/decl.h, libmaa/configure.in: Preparing DSL example snapshot

1997-09-01  faith  <faith at dict.org}

  * dictzip.c, dictzip.1, dictd.8, dict.c, dict.1, TODO, Makefile.in:
  Improved man pages

  * doc/rfc.ms, doc/Makefile.in, example3.conf, dictd.c, dict.c, daemon.c, configure.in:
  Work based on IETF comments

1997-08-26  faith  <faith at dict.org}

  * doc/toc.ms, doc/rfc.ms, doc/Makefile.in: Working on draft -02 for IETF

1997-08-21  faith  <faith at dict.org}

  * libmaa/maa.h: Got breakpoint tracking and navigation working

1997-08-15  faith  <faith at dict.org}

  * libmaa/arg.c: More work on tracking

1997-07-27  faith  <faith at dict.org}

  * doc/rfc.ms: Describe form of extensions

1997-07-18  faith  <faith at dict.org}

  * doc/security.doc, doc/rfc.ms: Minor RFC changes
  Addition of security-related comments

1997-07-12  faith  <faith at dict.org}

  * dict.c: Fixed -I

  * dictd.h: Fix config file name

  * dictd.8, README, Makefile.in: Added README.  Fixed install

  * TODO, Makefile.in: Installation fixes

  * doc/rfc.ms, servparse.y, servscan.l, net.h, net.c, example.dictrc, example3.conf, dictzip.1, dictd.h, dictd.c, dictd.8, dict.html, dict.h, dict.c, dict.1, configure.in, config.h.in, clientscan.l, clientparse.y, Makefile.in:
  Added config files to client
  Added dict: parsing to client
  Options for nospelling and pipeline size
  General cleanup
  Install and dist targets

1997-07-11  faith  <faith at dict.org}

  * libmaa/error.c: Allow routine name to be NULL

  * Makefile.in: Fixed dist target

  * doc/webster.out, doc/design.tex, net.c, dictzip.c, dictd.h, dictd.c, dict.c, dict.1, Makefile.in:
  Added client options for pipesize and html
  Unified versioning
  Added dist target
  Cleaned up Makefiles
  More client bug fixes

1997-07-09  faith  <faith at dict.org}

  * net.c, dictzip.c, dictd.c, dict.h, dict.c, dict.1, daemon.c:
  More work on client

1997-07-08  faith  <faith at dict.org}

  * doc/rfc.ms, net.c, dictd.8, dict.h, dict.c, dict.1, daemon.c:
  Work on client

1997-07-07  faith  <faith at dict.org}

  * doc/rfc.ms, example3.conf, dictd.c: Fixed proctitles on SunOS

  * libmaa/timer.c:
  Use millisecond resolution for timer, instead of microseconds

1997-06-28  faith  <faith at dict.org}

  * dictzip.1: dictzip documentation

  * doc/rfc.ms: Final revisions

1997-06-23  faith  <faith at dict.org}

  * index.c, config: Fixed BMH string matching (again)

  * index.c, dictzip.h, example.conf, dictzip.c, dictd.h, dictd.c, dictd.8, daemon.c, configure.in, Makefile.in:
  Optimized string searches, wrote man pages

  * libmaa/timer.c: Made timers return parent and children times

1997-06-21  faith  <faith at dict.org}

  * index.c, dictd.h, dictd.c, dictd.8, daemon.c:
  Work on logging and documentation

  * libmaa/maa.h, libmaa/log.c, libmaa/flags.c, libmaa/debug.c:
  Made timestamps on logs optional
  Fixed typos

1997-06-11  faith  <faith at dict.org}

  * doc/rfc.ms, index.c, example.conf, dictd.h, dictd.c, dictd.8:
  More work on RFC

1997-06-03  faith  <faith at dict.org}

  * dictd.c: Zero memory before use

1997-06-02  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/parse.c, libmaa/configure.in:
  Only make weak symbols when compiling a shared library.
  Otherwise, everything fails when the library is not shared.
  Bumped version number

  * dictd.c, daemon.c: Minor fixes

  * doc/rfc.ms, doc/Makefile.in, dict.html: More work on document

1997-05-27  faith  <faith at dict.org}

  * doc/rfc.ms, doc/Makefile.in, servparse.y, servscan.l, index.c, example.site, dictd.h, example.conf, dictd.c, dict.c, daemon.c, configure.in, codes.h:
  Made daemon conform to 26May RFC draft

  * doc/Makefile.in: Makefile for doc directory

  * doc/rfc.ms, doc/design.tex: Careful edit
  Fixed -ms style formatting things.  Numbering now automatic.
  Adjusted grammar and made references to it in appropriate places.
  Added requirements section.
  Added pipelining section.
  Added comments about virtual databases.

1997-05-26  faith  <faith at dict.org}

  * doc/rfc.sh: Formfee dconverter

1997-05-22  faith  <faith at dict.org}

  * servscan.l, servparse.y, dictd.h, example2.conf, dictd.c, daemon.c:
  Persistent daemon clean up

1997-05-21  faith  <faith at dict.org}

  * libmaa/Makefile.in: Fixed ChangeLog target

  * libmaa/doc/libmaa.tex, libmaa/doc/libmaa.600dpi.ps, libmaa/doc/Makefile.in, libmaa/configure.in, libmaa/source.c, libmaa/config.h.in, libmaa/Makefile.in:
  Fixed a few problems with the docs -- others remain

  * libmaa/parse.c, libmaa/configure.in, libmaa/Makefile.in:
  Add support for shared libs under Linux
  Add installation target in Makefile

  * libmaa/version.c: Bump version

1997-05-20  faith  <faith at dict.org}

  * libmaa/string.c, libmaa/maa.h, libmaa/hash.c: Added hash function caching
  Added str_copy* support for strings which are known to be unque
  (e.g., source lines).
  Both of these changes should speed up scanning and parsing.

1997-05-10  faith  <faith at dict.org}

  * libmaa/source.c: Fixed core dump when sourceType is not available

1997-05-09  faith  <faith at dict.org}

  * doc/rfc.ms: More work on RFC

1997-05-07  faith  <faith at dict.org}

  * doc/rfc.ms: Remove mention of URL

1997-05-02  faith  <faith at dict.org}

  * dictd.h, dictd.c, dict.c, daemon.c, config.h.in, configure.in, codes.h, Makefile.conf:
  Initial experiment with persistent daemons

1997-05-01  faith  <faith at dict.org}

  * libmaa/argtest.out, libmaa/argtest.c, libmaa/arg.c: Fix arg_argify, again

1997-04-30  faith  <faith at dict.org}

  * doc/rfc.ms: More changes from Bret

  * net.c, net.h, dictd.h, dictd.c, dict.h, dict.c, daemon.c, codes.h, Makefile.in:
  Start on client
  Fix up socket I/O

1997-04-26  faith  <faith at dict.org}

  * doc/rfc.ms: Minor revisions

1997-04-22  faith  <faith at dict.org}

  * doc/rfc.ms: Bret's initial additions and changes

1997-04-21  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/set.c, libmaa/maa.h, libmaa/list.c, libmaa/Makefile.in:
  Keep version numbers from automatically bouncing.
  Make remaining iterators return non-zero if the iteration ended early.

1997-04-03  faith  <faith at dict.org}

  * servscan.l, servparse.y, net.c, md5.h, md5.c, index.c, example.conf, dictd.h, dictd.c, daemon.c, Makefile.in:
  Finished initial implementation of new protocol

  * doc/rfc.ms: More changes

1997-03-31  faith  <faith at dict.org}

  * doc/rfc.ms, net.h, net.c, dictd.h, dictd.c, dict.c, daemon.c, Makefile.in:
  Moving toward new protocol

1997-03-26  faith  <faith at dict.org}

  * dictzip.h, dictd.h, dictd.c, daemon.c: Moving toward new protocol

  * doc/rfc.ms: RFC-like document

1997-03-23  faith  <faith at dict.org}

  * net.c, example.conf, dictd.c, dictzip.c, data.c, daemon.c: Tweaking

1997-03-19  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/source.c, libmaa/argtest.out, libmaa/maa.h, libmaa/pr.c, libmaa/arg.c, libmaa/argtest.c:
  Allow arg_argify to quote in different ways.

1997-03-18  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/source.c:
  Increased buffer size for error reporting

  * libmaa/version.c, libmaa/parse.c, libmaa/maa.h:
  Added new parser entry point

1997-03-15  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/sl.c: Finished implementing Algorithms 1-6
  Wrote up algorithm descriptions
  Benchmarked algorithms with qsort:
  % Algorithm 0:
  %     0 nodes have been labelled (   0 relabelled,    0 needs comp.)
  %     18.500u 0.200s 22.217 84%
  %
  % Algorithm 1:
  %     5425575 nodes have been labelled (   0 relabelled,    0 needs comp.)
  %     1:55.31u 0.210s 1:58.44 97%
  %
  % Algorithm 2:
  %     22067 nodes have been labelled (5403508 relabelled,    0 needs comp.)
  %     17.640u 0.250s 20.219 88%
  %
  % Algorithm 3:
  %     5425575 nodes have been labelled (   0 relabelled, 5425575 needs comp.)
  %     2:06.19u 0.210s 2:08.83 98%
  %
  % Algorithm 4:
  %     22067 nodes have been labelled (5403508 relabelled, 5425575 needs comp.)
  %     25.470u 0.320s 28.606 90%
  %
  % Algorithm 5:
  %     22067 nodes have been labelled (5403508 relabelled, 662227 needs comp.)
  %     21.250u 0.270s 23.765 90%
  %
  % Algorithm 6:
  %     22067 nodes have been labelled (349455 relabelled, 662227 needs comp.)
  %     11.910u 0.180s 14.250 84%

1997-03-13  faith  <faith at dict.org}

  * libmaa/version.c: Added -a option to select fast labeling algorithms
  Implemented Algorithm 0, 1, 2, noting speed improvement
  I plan to break Algorithm 3 into 3 and 4 (and 5?), since it is a big
  step up from Algorithm 2, and may not be any faster...

  * index.c, net.c, dictd.c: Added RESUSE for sockets
  Fixed up daemon code
  Fiddled with search algorithms a bit

1997-03-12  faith  <faith at dict.org}

  * index.c, net.c, dictd.c, decl.h, daemon.c, Makefile.in:
  Made status report elapsed times for previous command
  Fixed up regular expression matching

  * regex/regcomp.c:
  Added minimal support for automatic compilation under SunOS 4

  * libmaa/version.c, libmaa/timer.c, libmaa/maa.h, libmaa/log.c, libmaa/decl.h:
  Fixed bug in timers
  Improved logging
  Added more C prototypes for SunOS

1997-03-11  faith  <faith at dict.org}

  * net.h, net.c, dictd.h, index.c, dictd.c, Makefile.in, daemon.c:
  Added regexp matching, fixed logging

  * regex/Makefile:
  Fixed lib target to prevent everything from being built all the time

  * libmaa/version.c, libmaa/log.c: Fixed log_stream bug

1997-03-10  faith  <faith at dict.org}

  * net.h, servparse.y, net.c, dictd.h, index.c, dictd.c, dictd.8, data.c, dictP.h, daemon.c, configure.in, Makefile.in, TODO, COPYING:
  More work

  * libmaa/version.c, libmaa/maa.h, libmaa/text.c, libmaa/log.c, libmaa/error.c, libmaa/argtest.c, libmaa/argtest.out, libmaa/arg.c, libmaa/Makefile.in:
  Fixed bug in arg parsing
  Added generalized logging capabilities

  * regex/README.DICT: Information file

  * regex/tests, regex/utils.h, regex/split.c, regex/regexec.c, regex/regfree.c, regex/regex2.h, regex/regex.3, regex/regex.7, regex/regerror.c, regex/mkh, regex/regcomp.c, regex/main.c, regex/debug.c, regex/engine.c, regex/cname.h, regex/WHATSNEW, regex/cclass.h, regex/README, regex/Makefile, regex/COPYRIGHT:
  Original files from regex.shar

1997-03-09  faith  <faith at dict.org}

  * example.conf, index.c, dictd.h, dictzip.h, dictd.c:
  Performance enhancements

1997-03-08  faith  <faith at dict.org}

  * example.conf, servscan.l, configure.in, data.c, Makefile.in:
  Finish SunOS port

  * libmaa/version.c, libmaa/decl.h: Compile without warnings under SunOS

  * servscan.l, fmt.c, net.c, dictd.c, dictP.h, dict.c, dict.1, decl.h, data.c, daemon.c, configure.in, config.h.in:
  Cleanup for SunOS

  * libmaa/argtest.c, libmaa/argtest.out, libmaa/version.c, libmaa/arg.c:
  Updated arg functions to skip over whitespace in a reasonable way.\
  Updated argtest to test these updates.

1997-03-07  faith  <faith at dict.org}

  * search.c, index.c, look.c, dictd.c, dictd.h, configure.in, servscan.l, wndump.c, jargdump.c, net.c, servparse.y, dictzip.c, dictzip.h, dictrc.sample, dictP.h, decl.h, dict.h, daemon.c, data.c, config.sub, Makefile.in:
  Reorganization for better packaging

  * servparse.y, dictd.c, daemon.c: Port to SunOS

1997-03-01  faith  <faith at dict.org}

  * index.c, dictzip.c, dictd.c, data.c, daemon.c: Updates for SunOS

  * libmaa/version.c, dictzip.c, config, Makefile.in: Example ocnfig file

  * doc/design.tex, wndump.c, servscan.l, servparse.y, net.c, net.h, index.c, dict.h, dictd.c, data.c, daemon.c, Makefile.in:
  Initial dictd implementation

  * libmaa/version.c, libmaa/timer.c, libmaa/source.c, libmaa/parse.c, libmaa/maa.h:
  Fixed bugs in timer and error routines

1997-02-28  faith  <faith at dict.org}

  * libmaa/doc/Makefile.in, libmaa/version.c:
  Removed parse and source support from Khepera library

  * libmaa/doc/Makefile.in, libmaa/version.c, libmaa/source.c, libmaa/parse-concrete.c, libmaa/parse.c, libmaa/maa.h, libmaa/maa.c, libmaa/Makefile.in:
  Moved source and parser support to libmaa

  * doc/design.tex: Config files

  * doc/design.tex: More documentation

1997-02-27  faith  <faith at dict.org}

  * doc/webster.out, doc/design.tex: Add doc directory

1997-02-21  faith  <faith at dict.org}

  * libmaa/README: Updated credits information and version

1997-02-08  faith  <faith at dict.org}

  * libmaa/version.c: Fix typos

1996-12-26  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Make top-level "tests" target to run all regression tests.
  2) Do not free nseqs after the "return" statement.
  3) Add .dq debugging flag to debug the pending delete queue.
  4) Fix typo that prevented -pg from working (this was most important).

1996-12-25  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Re-did all the Range stuff again.  Here is how it works:
     At parse time, but never again:
      (N_SeqRange (N_Range1 .))      1 .. last (doesn't exist at parse time)
      (N_SeqRange (N_Range2 . .))    first .. last
      (N_SeqRange (N_Range3 . . .))  first, second .. last
     After post-parse processing, and thereafter:
      (N_SeqRange1 .)      1 .. last
      (N_SeqRange2 . .)    first .. last
      (N_SeqRange3 . . .)  first .. last .. step
  2) Added the new dpl_st_range_step_i call, which takes (first, last, step).
  3) Use dpl_copy whenever an nseq is assigned to another nseq (these
     assignments should be (automatically) removed when value tracking and
     CSE are addes).
  4) Moved dom-removal from pl.k to simple.k.  This is more appropriate.

  * libmaa/version.c:
  Major milestone: qsort runs to completion after a little tweaking.
  Here's what needs fixing:
      nseq assignment needs to use dpl_copy
      dpl_st_range uses the old style ranges, not the ones used by N_Range

  Other stuff in this checking:
  1) Exapanded ex4.pro so debug indexing
  2) Finished implementation of flat indexing (vs. SelectSeq)
  3) Added new functions: leseq, combine, flatten, concat
  4) Convert dom into range1
  5) Output DPL for index, concatreduce, combine
  6) Added ad hoc on-the-fly type generation for indexing (similar to that
     for insert/extract)
  7) Fix insert/extract on-the-fly type generation
  8) Print out types of all assignments -- this helps with debugging
  9) Fix type printing as called by tre_print.  Now type variables in a
     tre_print will be correctly identified as 'a, 'b, etc.  Before they
     might all be called 'a even when they were different.  (This was an
     error of printing -- the types were correctly stored as differentiated
     variables.)

1996-12-23  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Get insert/extract working.  For type checking, there is now a callback
     that will be called whenever a type definition cannot be found in the
     usual ways (this is a ``last resort'' callback).  The extract/insert
     type creation callback examines the current tree and creates an
     inference rule for it, making an entry in the symbol table so that this
     won't have to be regenerated again (although this may not currently be
     in the proper scope).  Next, I'll use this same callback to generate
     inference rules for indexing instances.
  2) Re-did all the range stuff.  Now N_Range1, N_Range2, and N_Range3 are
     carried through the transformations end-to-end.  This allows early
     detection of range1, and prevents a lot of dists of 1's.  It also means
     that we can avoid dpl_st_range_p at the Proteus-source level, since this
     function is not working in DPL.
  3) Added transforms to DPL calls for #, +/, ++, and a few others (?).
  4) Fixed some places where _tre_DeleteQueueProhibited was not being
     properly restored.  This led to a situation where the delete queue was
     never emptied, which led to infinite attempts to delete the deleted
     node.

  Next, figure out how to type check indexing.  Was the type system designed
  to handle this?

1996-12-22  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Removed some calls to fixup_scopes() since these should no longer be
     necessary (because of the hook which calls fixup_scopes() automatically
     at tree-insertion time).
  2) Added extensive debugging printouts to flatten.k and simple.k
  3) Added checks to make sure flattening and simplification actually worked.
  4) Fixed some dpl types in header.pro that were overly restrictive.
  5) Delayed removal of primed operators until type checking is no longer
     done.
  6) Totally re-wrote let simplification to deal correctly with changing
     scopes.  This was needed to get qsort.pro to transform.

  qsort.pro transforms now, but the output won't compile.  I need to get type
  checking working for Insert/Extract before I can look for other bugs in the
  transformations.  Although the type inference engine should be able to deal
  with these functions (it was designed to do so), it has never been hooked
  up to the high-level (e.g., Proteus language) code and tested.  Instead of
  using these type inference features to typecheck these functions, I'm going
  to try to use the backdoor I installed for the typechecking of the
  higher-order primed functions.  This should be easier to get working, and
  still makes use of the type inference engine, it just bypasses the
  arithmetic type clauses.

1996-12-14  faith  <faith at dict.org}

  * libmaa/version.c: 1) Changed spacing of ChangeLog
  2) Re-wrote let flattening (Palmer96 Rule1).  But still need to fixup
     scope.
  3) Re-wrote zip flattening (Palmer96 Rule5).  Would like to simplify this
     by adding a Khepera "optional" match.
  4) Added much more readable output for -V tracing (-dverbose).
  5) Added sscope fixups to be automatically applied at each insertion.
  6) Added printing support for unique node values (-d.unique).
  7) Experimented with removing symbols from the symbol table.  This is
     probably a very bad idea, but I'll leave the code there for now.  (The
     functions aren't used.)
  8) Made removal of pending nodes and queuing of pending nodes a critical
     section.
  9) Made fast post-order walks actually work.  (The logic had been inverted,
     so they were incorrectly used on small trees, but not on the main tree.)

  Still working on let scoping debugging.

1996-12-09  faith  <faith at dict.org}

  * libmaa/Makefile.in: Fix ChangeLog creation

  * libmaa/doc/extract.pl, libmaa/version.c, libmaa/Makefile.in:
  Added dist target to makefile
  Fixed perl script to work under Perl 5

1996-12-07  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Temporarily removed FORTRAN transformations from build.  They need to be
     updated in the face of other global changes, but they probably need to
     be completely re-written.
  2) Added support for a dpl subdirectory.
  3) Made other changes to get tiny test program to compile with C+DPL.  Now
     I'm working on qsort and am running into scope problems -- the
     transformations don't automaticallly preserve scope, so scopes must be
     propagated by hand.  Hence, forgetting when the scopes need updating is
     easy to do.  The quick fix is probably to re-run the scope updates from
     the ASTRoot frequently.
  4) Make main() function that includes call to dpl_setmem.  Need to add a
     return 0.
  5) Add last-use detection for variables, and insert calls to dpl_fre_nseq.

  This all means that this simple example now compiles with C+DPL:
      #include "header.pro"
      function foo(i:int, j:int):int { return i*j; }
      print [i in [1..30]: foo(i,i)];

  Tomorrow: get qsort to compile as well.

1996-12-01  faith  <faith at dict.org}

  * libmaa/version.c: Added query and if-then-else simplification.

  * libmaa/version.c:
  When looking for cpp, first try to use the one that comes with gcc.  Then
  look on the system for one.  We should probably incorporate the GNU cpp and
  hack it so that it won't print warnings for Proteus code.  For now, just
  redirect errors to /dev/null.

1996-11-26  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/error.c:
  1) Added simplify.k and moved all the simplifications there.
  2) Re-wrote the simplifications based on knowledge contained in the
     post-mortem analysis of trans.  Specifically, internested let and
     if-then-else expressions must be handled correctly.  I did the let part
     and will do the if-then-else part next.
  3) Make the uncall functions put identifiers in the top-level scope and
     mark them as DECLARED.  This prevents a N_Var declaration being made for
     them later.  If will also permit us to write type signatures for all of
     these functions, and treat them as builtins.  I think this will
     eliminate the need for moving back-and-forth between infix notation and
     functional notation, since it looks like that only thing that currently
     needs infix notation is the type checker.
  4) Added is_literal call to identifier Proteus literals.
  5) Ripped out the N_Build stuff and added more general call/uncall support
     for nodes which take an N_ExpressionList as an argument (currently,
     N_Sequence and N_Print).
  6) Make things which are already declared as declared, and insert N_Var
     declarations for everything else.
  7) Add C pretty-printing for types in N_Var, N_Param, and N_Function.
  8) Removed number from tree printouts unless -d.enum is used.  These
     numbers were for debugging, but are not useful since we use the N_ names
     for node everywhere.  The other names should probably be deprecated (but
     are still used for default pretty-printing).
  9) In the Khepera language compiler, don't declare any variables introduced
     in a rebuild statement.  Previously, only the root of the rebuild wasn't
     decalred.  This should all be done with typechecking, and will be in the
     next re-write of the Khepera language compiler :)

1996-11-23  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Make add_primed_func_defns propagate the return type as well as the
     argument types.
  2) Added functions to push [a in a_p, b in b_p, ... : ... ] through the
     expression as index operations (alternatively, this could be implemented
     with the now-non-existent zip primitive).
  3) Added functions to handle simple dom() simplification.  More complex
     functions will be easy to add as needed.
  4) Convert (N_Sequence (N_ExpressionList ...)) into (N_Build ...) so that
     these node can be interconverted with N_Call nodes, allowing iterators
     to be pushed through them.
  5) Added support for the "walk" keyword in the Khepera language.  This
     allows a pre-order walk to be performed of an arbitrary node, much like
     the "children" keyword allows the children to be iterated over.
  6) Fixed bug where deleting nodes which were queued for deletion caused a
     non-reentrant function to be called twice.  (Made tre_delete_queued
     reentrant.)
  7) Added font-lock mode definition as a comment in khepera-mode.el.

  This all means that Dan's Rule 0 through Rule 5 are fully impemented.  I'm
  going to work on function call parameter lifting next, and then on last-use
  detection so that DPL memory management can be added....

1996-11-19  faith  <faith at dict.org}

  * libmaa/version.c:
  1) Finally got Palmer96 rules 1-5 implemented.  There are a few problems:
      a) Primed function duplication doesn't work unless the type of the
         function is either specified or can be derived.  It can't be derived
         if the prime function isn't used.  The right way to do this is to
         delete primed functions (or not generated them) unless they are
         used.  However, due to POLYMORPHISM, this isn't possible without
         cooperation from the type system.  Adding this cooperation will take
         time.  Hence, I'm punting on this until we deal with polymorphism in
         general.
      b) I used the "James" method of generating primed functions, and I
         haven't written the part that pushed the zip'd components through to
         indexing.  I'll do that next.
  2) Removed Lar's optimiztion.k for the time being.  It doesn't help us to
     actually generate code and only confuses things.  I'll put it back after
     we can generate C+DPL.
  3) Redid all the call/uncall stuff using a header file.  Now, one line has
     to be added and the call/uncall functions will get created _and_ mapped
     into the xfm Rule body.  See functions.h for the list.
  4) Deactivated a bunch of transformations that do not get us any closer to
     executable code.
  5) Commented some of the rules.
  6) Fixed a few aesthetic bugs in error printing.
  7) Saved Lar's transform.c as transform.lars.c.
  8) Tried to fix the enclosed version of cpp to implement the ANSI #
     stringification directive.  Gave up.  Patched the parser routines to
     find the native cpp instead.  Will delete the local cpp next time -- its
     just too old to be useful, and ptrans requires an ANSI C compiler
     anyway.
  9) tre_fast_postorder_allowed lets you know if a tre_fast_postorder walk is
     possible.  It isn't right now if you aren't walking from the root of the
     labeled tree.

1996-11-15  faith  <faith at dict.org}

  * libmaa/version.c: New example

1996-11-11  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/maa.c:
  Broke out type dumping routines (for debugging with readable types).
  Make top-level dist target.
  Added top-level version.c and version/copyright printing stuff.  To bump
      the version, make version.stamp and check in the new version.c.
  Tried to free memory that the type inference system creates.  I got some of
      this, but not all of it.  Specifically, I can't figure out how to
      safely free type expressions (Expr in khepera/lib/typ.c).  These
      maintain their own reference counts, but only for internal references,
      not for references from the AST or from the symbol table.  Sometimes
      types get destroyed on-the-fly, so a simple list of all allocated type
      expressions is not sufficient.  It would be nice to get this done
      sometime, since then we could look for real memory leaks and make
      better use of the debugging malloc technology we have available.
  Fixed all obvious memory leaks in the khepera language translator program
      (which doesn't use the type system, and only had some leaks related to
      the symbol-table).

  * libmaa/version.c:
  1) Added code to take advantage of 1 and 2 parameter versions of dpl_range*
  2) Added transformations for dpl_dist*, dpl_restrict*
  3) Print warning when an AST node does not have an entry in header.pro
     (a type isn't needed, just an entry -- at least this way we know about
     it; and, because of the powerful type inference engine, everything
     doesn't have to be explicitly typed -- the engine will figure out what
     the type has to be most (all?) of the time).
  todo) work on -fflatten and -fsimple, especially for if statements

1996-11-10  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/memory.c, libmaa/maa.h, libmaa/basetest.c, libmaa/basetest.out, libmaa/base64.c, libmaa/base26.c, libmaa/Makefile.in:
  1) Fixed up name mangling for multi-arity types.
  2) Hooked up Libmaa memory objects to the type inference.  This gives maybe
     a 10% improvement on short examples.  Oh well.
  3) Made type printing more pretty by using letters instead of %p (this
     is what the base 26 stuff is for in Libmaa).
  4) Looked really hard at how to get polymorphic (and primed functions) to
     print out in executable code.  The problem here is that the type system
     figures out monomorphic types for each instance of a function use.
     E.g., at the N_Call node, monomorphic types have to exist for type
     checking to complete.  However, after figuring out all this information,
     the type system just THROWS IT AWAY!  This is a fine thing to do for a
     type system, since it can just re-figure it out again later.  But it
     isn't very helpful if you want to generate executable monomorphic
     instances for the functions.  I looked in the type engine at the
     function where the monomorphic-instance information exists
     (inf_infer_definition), but there isn't enough information at that point
     to let the high-level code know that a new monomorphic instance needs to
     be generated.  Fixing this is going to require kludging the type system
     so that it has enough information to notify the high-level code via a
     callback.  Then the high-level code has to deal with renaming the
     monomorphic instance and generating the necessary monomorphic executable
     code.  Getting all of these details right was one of the biggest
     problems that I had with the type inference engine in trans.  Based on
     previous experience with trans, I think this problem will take several
     weeks to fix in ptrans.  Hence, I'm going to ignore polymorphic
     functions for now.  Code will only be generated for typed functions and
     for functions that analyze to a single monomorphic instance (and, maybe
     not even the later, since there still isn't enough information at the
     top level to generate a typed C or Fortran function -- that information
     is also lost even though the function is just untyped and isn't actually
     polymorphic).  Primed functions can be handled with Lar's kludge:
     generate (typed) primed versions of all user-defined functions early,
     and generate code for them regardless of the need for such code.
  5) The next big hurdles are to get DPL memory management working, and to
     get all the appropriate DPL functions generated.  The I can start
     checking the flattening transformations.  I need to get all of this done
     by the middle or end of the week so that I can start on the debugging
     support.  In fact, even without memory management, I can start working
     on debugging support, so that's probably what I should do as soon as
     compilable DPL can be generated...

  * libmaa/version.c: Recursive typechecking works.  Joy.

1996-11-08  faith  <faith at dict.org}

  * libmaa/version.c: Recursive functions do _not_ typecheck.  Fuck.
  Made automatic function name mangling work for variable-argument functions.
  Fixed types.k (these rules are far too application order-dependent).
  Make ground matching work (e.g., (N_Node 0) matches N_Node without
  any children) in Khephera language.

1996-11-04  faith  <faith at dict.org}

  * libmaa/version.c: Fixed pp_* so that default printing styles works.
  Added a bunch of dpl_* primitives.
  Fixed local cpp copy so that ## token concatenation has no warning.
  Added a queue of nodes that have a delete pending.  This allows the
     node that is currently being walked in the tree to be deleted.  This
     had been an impossible operation previously.
  Tightened up error checking in tree walkers.
  Made 'else' actually work in Khepera if clauses.  Previously the else
     clause was executed along with the then clause.

1996-11-02  faith  <faith at dict.org}

  * libmaa/version.c: Starting to add primitive dpl_mul-like operations.

1996-10-31  faith  <faith at dict.org}

  * libmaa/version.c: Added dpl_build_*
  Added ability to use .. (sametypes) wildcard in var declaration
    (this is essential to be able to type dpl_build_*)

1996-10-30  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/config.sub:
  Added topl.c and pl.k for transformations to a generic parallel library
  Transform various ranges into dpl_st_range_*
  Remove conf.cache when building configure files
  Make config.sub recognize i686
  Removed verbose tree printing so that new tree printing can be more
     selective (e.g., for debugging)
  Fixed bug where a poiner from alloca was used as a symbol name

1996-10-10  faith  <faith at dict.org}

  * search.c, dict.h, dictzip.c, Makefile.in: Work on searching

1996-10-07  faith  <faith at dict.org}

  * libmaa/maaP.h, libmaa/version.c: Changes for Solaris cc compiler

1996-10-03  faith  <faith at dict.org}

  * libmaa/prtest.out, libmaa/version.c, libmaa/Makefile.in:
  Added -with-nox option to inhibit building X applications
  Added prtest to libmaa suite

  * libmaa/version.c, libmaa/prtest.c, libmaa/pr.c, libmaa/maa.h, libmaa/error.c:
  Made error messages more uniform
  Made process support use file descriptors instead of stream I/O.  You
  should still be able to fdopen on a fd returned from a function, if you
  do all of the I/O yourself.  However, a filter function was added, so
  playing with I/O probably isn't needed.  Coprocesses, or a coprocess chain,
  should be fairly easy to set up now, in a generalized fashion.  Signals
  still aren't handled in a POSIX way, and deaths of children aren't caught
  asynchronously, so support can still be made better.

1996-10-02  faith  <faith at dict.org}

  * libmaa/pr.c: Before ripping out stream I/O

1996-09-30  faith  <faith at dict.org}

  * zlib/Makefile, zlib/Makefile.in: Add distclean to Makefile

  * zlib/Makefile.in, dictzip.c, Makefile.in, dict.h:
  Got random access reads on compressed file working.

  * libmaa/version.c, libmaa/error.c: Make error messages prettier

1996-09-29  faith  <faith at dict.org}

  * dictzip.c: Update Id string

1996-09-26  faith  <faith at dict.org}

  * wndump.c, install-sh, jargdump.c, fmt.h, dictzip.c, fmt.c, dict.h, config.sub, configure.in, config.h.in, config.guess, Makefile, Makefile.in:
  General work on formatting and use with configure.

  * libmaa/version.c, libmaa/maa.h, libmaa/pr.c, libmaa/base64.c:
  Work on base64 and process management

1996-09-25  faith  <faith at dict.org}

  * libmaa/version.c, libmaa/hash.c, libmaa/maaP.h, libmaa/decl.h:
  Finish Solaris port

  * libmaa/maa.h, libmaa/version.c, libmaa/arg.c:
  Make ptrans compile and use internal cpp

  * libmaa/version.c, libmaa/hash.c, libmaa/configure.in, libmaa/config.h.in, libmaa/Makefile.in:
  Hash bigendian and little endian integers the same way
  This allows us to have test programs that produce the same results on
  different architectures.

  * libmaa/settest.out, libmaa/settest.c: Print out random stuff

  * libmaa/version.c, libmaa/settest.out, libmaa/settest.c, libmaa/rnd.c, libmaa/hashtest.c, libmaa/hashtest.out, libmaa/Makefile.in:
  Hardcoded random numbers for test functions

  * libmaa/version.c, libmaa/settest.c, libmaa/maaP.h, libmaa/mkrnd.c, libmaa/decl.h, libmaa/hashtest.c, libmaa/configure.in, libmaa/Makefile.in:
  Stuff for Solaris port

  * libmaa/config.guess: Make sure all library functions are under LGPL
  Update configure support from autoconf-2.10

1996-09-24  faith  <faith at dict.org}

  * wndump.c, output.c, fmt.c, fmt.h, encode.c, engine.c, dictzip.c, decode.c.save, compressdict.c, decode.c, compressdict.1, compress2.c, compress3.c, buildindex.c, COPYING.look, buildindex.1, COPYING:
  Move to version 2.0

  * libmaa/sltest.c, libmaa/version.c, libmaa/maaP.h, libmaa/maa.h, libmaa/Makefile.in, libmaa/base64.c:
  Added base64 routines
  Fixed warnings generated under Linux

1996-09-23  faith  <faith at dict.org}

  * libmaa/xmalloc.c, libmaa/stringtest.c, libmaa/timer.c, libmaa/string.c, libmaa/sl.c, libmaa/strdup.c, libmaa/settest.c, libmaa/set.c, libmaa/prime.c, libmaa/primetest.c, libmaa/listtest.c, libmaa/list.c, libmaa/error.c, libmaa/debugtest.c, libmaa/decl.h, libmaa/debug.c, libmaa/bit.c, libmaa/Makefile.in, libmaa/COPYING.LIB, libmaa/COPYING:
  Make sure all library routines are under GNU LGPL.
  Make sure all test programs are under GNU GPL.
  Include copies of GPL and LGPL for stand-alone libmaa.

  * zlib/zutil.c, zlib/zutil.h, zlib/zlib.rc, zlib/zlib.def, zlib/zlib.h, zlib/zconf.h, zlib/trees.c, zlib/uncompr.c, zlib/minigzip.c, zlib/infutil.c, zlib/infutil.h, zlib/inftrees.h, zlib/inftrees.c, zlib/inflate.c, zlib/inffast.h, zlib/infcodes.h, zlib/inffast.c, zlib/infblock.h, zlib/infcodes.c, zlib/infblock.c, zlib/gzio.c, zlib/descrip.mms, zlib/example.c, zlib/deflate.h, zlib/crc32.c, zlib/deflate.c, zlib/configure, zlib/algorithm.doc, zlib/compress.c, zlib/adler32.c, zlib/Makefile.wat, zlib/README, zlib/Makefile.sas, zlib/Makefile.tc, zlib/Makefile.riscos, zlib/Makefile.in, zlib/Makefile.msc, zlib/Makefile.bor, zlib/Makefile.dj2, zlib/Makefile.b32, zlib/Make_vms.com, zlib/Makefile, zlib/INDEX, zlib/ChangeLog:
  zlib-1.0.4

  * output.c, engine.c, dict.h, encode.c, decode.c.save, dict.1, decode.c, compressdict.1, compressdict.c, compress3.c, buildindex.1, compress2.c, Makefile, COPYING.look:
  dict-1.1

  * output.c, look.c, dictrc.sample, engine.c, dict.h, dict.1, dict.c, buildindex.1, buildindex.c, Makefile, COPYING:
  dict-1.0

