dnl Process this file with autoconf to produce a configure script for dict.
dnl
dnl Created: Wed Apr 24 14:11:05 1996 by faith@dict.org
dnl Revised: Sat Mar 30 11:01:57 2002 by faith@dict.org
dnl Copyright 1996-1999, 2001-2002 Rickard E. Faith (faith@dict.org)
dnl
dnl This program is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU General Public License as published by the
dnl Free Software Foundation; either version 1, or (at your option) any
dnl later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License along
dnl with this program; if not, write to the Free Software Foundation, Inc.,
dnl 675 Mass Ave, Cambridge, MA 02139, USA.
dnl
dnl $Id: configure.in,v 1.33 2003/01/15 17:02:58 cheusov Exp $
dnl
dnl Flag conventions:
dnl     CFLAGS and LDFLAGS should be settable on the make commandline
dnl             for optimization and stripping.
dnl     WCFLAGS and WLDFLAGS are warnings and stuff that we like (e.g., -pipe)
dnl     XTRACFLAGS, XTRALDFLAGS are for things like dmalloc
dnl     LIBOBJS is an automatically-generated list of extra objects we need
dnl These aren't used for libmaa:
dnl     XCFLAGS and XLDFLAGS are for X11
dnl     YCFLAGS is for yacc
dnl     LCFLAGS is for lex


define(VERSION, 1.9.2)


AC_PREREQ(2.52)
AC_REVISION($Revision: 1.33 $)

AC_INIT(dict, VERSION, "dict-beta@dict.org")

AC_CONFIG_SRCDIR([dictd.c])
AC_CONFIG_HEADER(config.h)

echo Configuring for dict
echo .

DICT_VERSION=VERSION

AC_ARG_WITH(cc,
[  --with-cc               with cc (instead of gcc)],
[
if test "x${withval}" = xyes; then
    CC=cc
fi
])

AC_CANONICAL_HOST
AC_PROG_CC
dnl AC_PROG_CXX

AC_ISC_POSIX

REALCC="$CC"
if test "$CC" = gcc; then
    CFLAGS='-g -O'
    WCFLAGS='-Wall'
    case "$host" in
      dnl did include: -Winline
      *linux*)
	WCFLAGS="$WCFLAGS -pipe -Wwrite-strings -Wcast-align \
	 -Wmissing-prototypes -Wshadow -Wnested-externs -Waggregate-return";;
	sparc-sun-sunos*)
	  WCFLAGS="$WCFLAGS -pipe";;
    esac
				# Silence flex/bison output
    SCFLAGS="-Wno-implicit -Wno-unused"
else
    CFLAGS='-g'
fi

local_dmalloc=0
local_libmaa=0
local_zlib=0

AC_ARG_WITH(cflags,
[  --with-cflags=FLAGS     use FLAGS for CFLAGS],
CFLAGS="$withval")

AC_ARG_WITH(prof,
[  --with-prof             with prof profiling],
[
if test "x${withval}" = xyes; then
    CFLAGS="$CFLAGS -p"
    LDFLAGS="$LDFLAGS -p"
fi
])

AC_ARG_WITH(gprof,
[  --with-gprof            with gprof profiling],
[
if test "x${withval}" = xyes; then
    CFLAGS="$CFLAGS -pg"
    LDFLAGS="$LDFLAGS -pg"
fi
])

AC_ARG_WITH(dmalloc,
[  --with-dmalloc          with Gray Watson's debugging malloc],
[
if test "x${withval}" = xyes; then
    needs_dmalloc=1
    needs_xmalloc=0
fi
])

AC_ARG_WITH(local-dmalloc,
[  --with-local-dmalloc    with dmalloc built in local source tree],
[
if test "x${withval}" = xyes; then
    needs_dmalloc=1
    local_dmalloc=1
    needs_xmalloc=0
fi
])

AC_ARG_WITH(local-libmaa,
[  --with-local-libmaa     with libmaa built in local source tree],
[
if test "x${withval}" = xyes; then
    local_libmaa=1
fi
])

AC_ARG_WITH(local-zlib,
[  --with-local-zlib       with zlib built in local source tree],
[
if test "x${withval}" = xyes; then
    local_zlib=1
fi
])

AC_ARG_WITH(checker,
[  --with-checker          with Checker support (Linux only)],
[
if test "x${withval}" = xyes; then
    REALCC=checkergcc
fi
])

AC_ARG_WITH(efence,
[  --with-efence           with Electric Fence (by Bruce Perens)],
[
if test "x${withval}" = xyes; then
    REALLIBS="$REALLIBS -lefence"
fi
])

AC_ARG_WITH(insure,
[  --with-insure           with Insure support (from ParaSoft Corp.)],
[
if test "x${withval}" = xyes; then
    REALCC=insight
fi
])

AC_ARG_WITH(purify,
[  --with-purify           with Purify support (from Pure, Inc.)],
[
if test "x${withval}" = xyes; then
    REALCC="purify gcc"
fi
])

AC_ARG_ENABLE([plugin],[  --disable-plugin        without plugin support])
if test "x${enableval}" != xno; then
    CFLAGS="$CFLAGS -DUSE_PLUGIN"
	AC_CHECK_LIB(ltdl,lt_dlopen,REALLIBS="$REALLIBS -lltdl")
	USE_PLUGIN=1
fi

dnl Checks for programs.
echo Checking for programs

AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_RANLIB
AC_PROG_MAKE_SET
dnl AC_PROG_LIBTOOL
dnl AC_LIBTOOL_DLOPEN

AC_CHECK_PROG(AR,ar,ar)

dnl AC_PROG_LIBTOOL
dnl AC_LIBTOOL_DLOPEN

AC_CHECK_PROGS(NROFF,gnroff nroff)
AC_CHECK_PROGS(TROFF,groff troff)
AC_CHECK_PROGS(COL,col cat)
AC_CHECK_PROGS(EXPAND,expand cat)

echo .
echo Checking for libraries

dnl Always use local libmaa due to recent bug fixes
local_libmaa=1
if test "$local_libmaa" = 0; then
    AC_CHECK_LIB(maa,maa_init,REALLIBS="$REALLIBS -lmaa",local_libmaa=1)
fi

if test "$local_libmaa" = 1; then
    AC_MSG_CHECKING(for libmaa in local source tree)
    if test -d libmaa; then
        REALLIBS="$REALLIBS -Llibmaa -lmaa"
        XTRACFLAGS="$XTRACFLAGS -Ilibmaa"
        subdirs="$subdirs libmaa"

	AC_CONFIG_SUBDIRS(libmaa)

        allsubdirs="$allsubdirs libmaa"
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
        AC_MSG_ERROR(Libmaa not found, cannot continue)
    fi
fi

if test "$local_zlib" = 0; then
    AC_CHECK_LIB(z,zlibVersion,REALLIBS="$REALLIBS -lz",local_zlib=1)
fi

if test "$local_zlib" = 1; then
    AC_MSG_CHECKING(for zlib in local source tree)
    if test -d zlib; then
        REALLIBS="$REALLIBS -Lzlib -lz"
        XTRACFLAGS="$XTRACFLAGS -Izlib"
        allsubdirs="$allsubdirs zlib"

	AC_CONFIG_SUBDIRS(zlib)

        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
        AC_MSG_ERROR(Zlib not found, cannot continue)
    fi
fi

AC_CHECK_LIB(socket,main,REALLIBS="$REALLIBS -lsocket")
AC_CHECK_LIB(nsl,main,REALLIBS="$REALLIBS -lnsl")

if test "$local_dmalloc" = 0 -a "$needs_dmalloc" = 1; then
    AC_CHECK_LIB(dmalloc,main,
        REALLIBS="$REALLIBS -ldmalloc"
        XTRACFLAGS="$XTRACFLAGS -DDMALLOC_FUNC_CHECK",
    local_dmalloc=1)
fi

if test "$local_dmalloc" = 1; then
    AC_MSG_CHECKING(for dmalloc in local source tree)
    if test -d dmalloc; then
        REALLIBS="$REALLIBS -Ldmalloc -ldmalloc"
        XTRACFLAGS="$XTRACFLAGS -DDMALLOC_FUNC_CHECK -Idmalloc"
        XTRAHEADERS="$XTRAHEADERS dmalloc/dmalloc.h"
        allsubdirs="$allsubdirs dmalloc"

	AC_CONFIG_SUBDIRS(dmalloc)

        subdirs="$subdirs dmalloc"
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
    fi
fi

echo .
echo Checking for header files

AC_HEADER_STDC
AC_HEADER_TIME

if test "x${USE_PLUGIN}" = "x1"; then
   AC_CHECK_HEADERS(ltdl.h,
		[AC_DEFINE(HAVE_LTDL_H, 1,
			[Define if you have the <ltdl.h> header file.])],
			[AC_MSG_ERROR([Install ltdl library and appropriate header files])])
fi

AC_CHECK_HEADERS(unistd.h strings.h limits.h)
AC_CHECK_HEADERS(sys/resource.h sys/time.h sys/param.h sys/wait.h)
AC_CHECK_HEADERS(wctype.h)

echo .
echo Checking for system constants

AC_C_CONST
AC_C_INLINE

echo .
echo Checking for library functions

AC_FUNC_ALLOCA
AC_FUNC_MMAP
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_FUNC_STAT
AC_FUNC_STRCOLL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_FUNC_WAIT3

AC_CHECK_FUNCS(strdup strtol strtoul semget strerror inet_aton)
AC_CHECK_FUNCS(strdup strtol strtoul)
AC_CHECK_FUNCS(alarm gethostbyaddr gethostbyname gethostname gettimeofday)
AC_CHECK_FUNCS(inet_ntoa memmove memset munmap regcomp setenv setlocale)
AC_CHECK_FUNCS(socket strcasecmp strchr strrchr strstr uname)

#AC_REPLACE_FUNCS(towlower)
#AC_REPLACE_FUNCS(wcrtomb wctomb mbrlen mbrtowc mbstowcs mbtowc)

AC_LIBOBJ(mbtowc)
AC_LIBOBJ(mbstowcs)
AC_LIBOBJ(mbrtowc)
AC_LIBOBJ(mbrlen)
AC_LIBOBJ(wctomb)
AC_LIBOBJ(wcrtomb)


echo .
echo Making output files

CC="$REALCC"
LIBS="$REALLIBS"

AC_SUBST(DICT_VERSION)
AC_SUBST(WCFLAGS)
AC_SUBST(SCFLAGS)
AC_SUBST(WLDFLAGS)
AC_SUBST(XTRACFLAGS)
AC_SUBST(XTRALDFLAGS)
AC_SUBST(XTRAHEADERS)
AC_SUBST(USE_PLUGIN)
AC_SUBST(allsubdirs)

AC_CONFIG_FILES([Makefile doc/Makefile])
AC_CONFIG_FILES([dictdplugin-config], [chmod +x dictdplugin-config])

AC_OUTPUT

date > stamp-h.in
date > stamp-h
echo .
echo Done
